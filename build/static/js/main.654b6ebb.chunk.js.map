{"version":3,"sources":["components/header/Header.js","actions/index.js","functions/index.js","reducers/index.js","components/game/GameLaws.js","containers/Character.js","components/boxes/characters/Characters.js","containers/Box.js","components/boxes/LetterBox.js","components/boxes/OperandBox.js","components/boxes/SolutionBox.js","components/boxes/Boxes.js","components/buttons/Button.js","components/buttons/Buttons.js","components/game/Game.js","routes/index.js","serviceWorker.js","index.js","App.js"],"names":["Header","react_default","a","createElement","className","React","Component","ADD_CHAR","REMOVE_CHAR","SUBMIT_ANS","getIndexOfHash","hash","array","i","length","identifier","makeHash","text","possible","charAt","Math","floor","random","makeCharArr","value","type","charArr","push","initialState","letterCharArr","words","randomWord","operandCharArr","solutionCharArr","answerSubmitted","quassinoballyApp","state","arguments","undefined","action","console","log","index","newChar","char","box","Object","objectSpread","concat","toConsumableArray","charHash","removeIndex","slice","canMoveChar","toBox","moveChar","fromBox","dispatch","letterMove","operandMove","charSourceDrop","hover","props","monitor","component","getDecoratedComponentInstance","isCurrentlyOver","drop","currentlyOver","currentBox","getItem","dropIndex","b","gameLaws","Character","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pushLeft","inherits","createClass","key","_this$props","connectDropTarget","connectDragSource","DragSource","beginDrag","endDrag","removeGap","connect","dragSource","isDragging","DropTarget","dropTarget","isOver","shallow","Characters","bind","assertThisInitialized","item","setState","boxType","characterArr","containers_Character","boxTarget","lengthOfToBox","Box","characters_Characters","ownProps","LetterBox","containers_Box","OperandBox","operands","droppable","SolutionBox","Boxes","boxes_LetterBox","boxes_OperandBox","boxes_SolutionBox","Button","Buttons","buttons_Button","Game","backend","isMobile","TouchBackend","isBrowser","HTML5Backend","lib","header_Header","boxes_Boxes","buttons_Buttons","AppController","BrowserRouter","Switch","Route","path","process","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","es","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.654b6ebb.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <div className=\"header\">\n        header\n      </div>\n    )\n  }\n}\n\nexport default Header;\n","export const ADD_CHAR = 'ADD_CHAR'\nexport const REMOVE_CHAR = 'REMOVE_CHAR'\nexport const SUBMIT_ANS = 'SUBMIT_ANS'\n\nexport function addChar(char, box) {\n  return{\n    type: ADD_CHAR,\n    char,\n    box\n  }\n}\n\nexport function removeChar(char, index, box) {\n  return {\n    type: REMOVE_CHAR,\n    char,\n    index,\n    box\n  }\n}\n\nexport function submitAns(charArr) {\n  return {\n    type: SUBMIT_ANS,\n    charArr\n  }\n}\n","export default function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function getIndexOfHash(hash, array) {\n  for(let i = 0; i < array.length; i ++) {\n    // console.log(\"a\")\n    if(hash === array[i].identifier) {\n      return i;\n    }\n  }\n}\n\nexport function lengthOfToBox(toBox) {\n  if(toBox.type === \"letter\") {\n    return toBox.letterCharArr.length;\n  }\n  else if(toBox.type === \"operand\") {\n    return toBox.operandCharArr.length;\n  }\n  else if(toBox.type === \"solution\") {\n    return toBox.solutionCharArr.length;\n  }\n}\n","import { ADD_CHAR, REMOVE_CHAR, SUBMIT_ANS } from '../actions'\nimport {getCompositeCharArr, getIndexOfHash} from '../functions';\n\nfunction randomWord() {\n  let words = [\"this\", \"man\", \"child\"]\n  return words[Math.floor(Math.random() * words.length)];\n}\n\nfunction makeHash() {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < 15; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\nfunction makeCharArr(value, type) {\n  let charArr = [];\n  for(var  i = 0; i < value.length; i ++) {\n    charArr.push({\n      type: type,\n      value: value[i],\n      identifier: makeHash()\n    })\n  }\n  return charArr\n}\n\nlet operands = \"+-×÷()\";\n\nconst initialState = {\n  letterCharArr: makeCharArr(randomWord(), 'letter'),\n  operandCharArr: makeCharArr(operands, 'operand'),\n  solutionCharArr: [],\n  answerSubmitted: false\n}\n\nfunction quassinoballyApp(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CHAR:\n      // console.log(\"add char\")\n      console.log(action.index);\n      let newChar = {\n        type: action.char.type,\n        value: action.char.value,\n        identifier: makeHash()\n      }\n      // console.log(newChar);\n      if(action.box.type === \"letter\") {\n        return {\n          ...state,\n          letterCharArr: [...state.letterCharArr, newChar]\n        }\n      }\n      else if(action.box.type === \"operand\") {\n        return {\n          ...state,\n          operandCharArr: [...state.operandCharArr, newChar]\n        }\n      }\n      else if(action.box.type === \"solution\") {\n        return {\n          ...state,\n          solutionCharArr: [...state.solutionCharArr, newChar]\n        }\n      }\n      else {\n        console.log(action)\n        console.log(action.box.type)\n      }\n    case REMOVE_CHAR:\n      let charHash = action.char.identifier;\n      if(action.box.type === \"letter\") {\n        let removeIndex = getIndexOfHash(charHash, state.letterCharArr);\n        return {\n          ...state,\n          letterCharArr: [\n            ...state.letterCharArr.slice(0, removeIndex),\n            ...state.letterCharArr.slice(removeIndex + 1, )\n          ]\n        }\n        return state;\n      }\n      else if(action.box.type === \"solution\") {\n        let removeIndex = getIndexOfHash(charHash, state.solutionCharArr);\n        return {\n          ...state,\n          solutionCharArr: [\n            ...state.solutionCharArr.slice(0, removeIndex),\n            ...state.solutionCharArr.slice(removeIndex + 1, )\n          ]\n        }\n        return state;\n      }\n      else {\n        console.log(action.box.type)\n      }\n      return state;\n      // console.log(\"remove char\");\n    case SUBMIT_ANS:\n      console.log(\"submit ans\");\n    default:\n      // console.log(\"default\");\n      return state\n  }\n}\n\nexport default quassinoballyApp;\n","import { createStore } from 'redux'\nimport reducer from '../../reducers'\nimport { addChar, removeChar, submitAns } from  '../../actions'\n\n\nexport function canMoveChar(char, toBox) {\n  if(char.value.type === \"letter\") {\n    if(toBox.type === \"operand\") {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else if(char.value.type === \"operand\") {\n    if(toBox.type === \"letter\") {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else {\n    console.log(char.type)\n  }\n}\n\nexport function moveChar(char, index, fromBox, toBox, dispatch) {\n  console.log(index)\n  if(char.type === \"letter\") {\n    letterMove(char, index, fromBox, toBox, dispatch);\n  }\n  else if(char.type === \"operand\") {\n    operandMove(char, index, fromBox, toBox, dispatch);\n  }\n}\n\nfunction letterMove(char, index, fromBox, toBox, dispatch) {\n  dispatch({\n    type: 'ADD_CHAR',\n    char: char,\n    index: index,\n    box: toBox\n  });\n  dispatch({\n    type: 'REMOVE_CHAR',\n    char: char,\n    index: index,\n    box: fromBox\n  });\n}\n\nfunction operandMove(char, index, fromBox, toBox, dispatch) {\n  if(toBox.type === \"operand\") {\n    dispatch({\n      type: 'REMOVE_CHAR',\n      char: char,\n      index: index,\n      box: fromBox\n    });\n  }\n  else if(toBox.type === \"solution\") {\n    dispatch({\n      type: 'ADD_CHAR',\n      char: char,\n      index: index,\n      box: toBox\n    });\n  }\n}\n","import React from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { findDOMNode } from 'react-dom'\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport getIndexOfHash from '../functions';\nimport * as gameLaws from '../components/game/GameLaws';\n\n\nfunction collectDrag(connect, monitor) {\n  // console.log(connect)\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }\n}\n\nfunction collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    // isOver: monitor.isOver()\n    // isOver: monitor.isOver()\n    isOver: monitor.isOver({shallow: true})\n  }\n}\n\nconst charSourceDrag = {\n  beginDrag(props) {\n    // console.log(\"begin drag\")\n    return {props};\n  },\n  endDrag(props) {\n    // console.log(props);\n    props.removeGap();\n    return{props};\n  }\n};\n\nconst charSourceDrop = {\n  hover(props, monitor, component) {\n    let c = component.getDecoratedComponentInstance()\n    props.isCurrentlyOver(props.value.identifier)\n  },\n  drop(props, monitor, component) {\n    let dispatch = props.dispatch;\n    let hash = props.currentlyOver;\n    let boxType = props.currentBox.type;\n\n    let box = monitor.getItem().props;\n    let fromBox = box.currentBox.type;\n    let toBox = component.props.currentBox;\n\n    let dropIndex = getIndexOfHash(hash, toBox);\n\n\n    if(gameLaws.canMoveChar(props, toBox)) {\n      gameLaws.moveChar(props.value.value, dropIndex, fromBox, toBox, dispatch);\n    }\n    else {\n      console.log(\"cant move\")\n    }\n  }\n};\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nexport class Character extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      pushLeft: false\n    }\n  }\n  render(){\n\n    // console.log(this.state)\n    // console.log(this.props);\n    let currentlyOver = this.props.currentlyOver;\n    let identifier = this.props.value.identifier;\n    const { connectDropTarget, connectDragSource } = this.props;\n    let pushLeft = (currentlyOver === identifier) ? \"push-left\" : \"\"\n\n    return connectDragSource(connectDropTarget(\n      <div className={\"character \" + this.props.value.type + \"-character \" + pushLeft}>\n        {this.props.value.value}\n      </div>\n    ))\n  }\n}\n\n\n\nCharacter = DragSource('character', charSourceDrag, collectDrag)(Character);\nCharacter = DropTarget('character', charSourceDrop, collectDrop)(Character);\nexport default connect(mapStateToProps)(Character);\n","import React from 'react';\nimport Character from '../../../containers/Character'\n\n\nclass Characters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentlyOver: ''\n    }\n    this.isCurrentlyOver = this.isCurrentlyOver.bind(this);\n    this.removeGap = this.removeGap.bind(this);\n  }\n\n  isCurrentlyOver(item) {\n    // console.log(item);\n    this.setState({\n      currentlyOver: item\n    })\n  }\n\n  removeGap() {\n    this.setState({\n      currentlyOver: ''\n    })\n  }\n\n  render() {\n    // this is wild inefficient but it works will clean up later in\n    // getting this logic out of the render function\n    let boxType = this.props.boxType;\n    let value = [];\n    if(boxType === \"letter\") {\n      value = this.props.letterCharArr;\n    }\n    else if(boxType === \"operand\") {\n      value = this.props.operandCharArr;\n    }\n    else if(boxType === \"solution\") {\n      value = this.props.solutionCharArr;\n    }\n    let operandValuesArr = [\"+\",\"-\",\"×\",\"÷\",\"(\",\")\"];\n    let letterType = \"\";\n    let characterArr = []\n    // console.log(this.props);\n    let arrType = null;\n    for(var i = 0; i < value.length; i ++) {\n      // if(operandValuesArr.includes(value[i])) {\n      //   letterType = \"operand\";\n      //   arrType = this.operandCharArr;\n      // }\n      // else if(){\n      //   letterType = \"letter\";\n      // }\n      let isCurrentlyOver =\n\n      characterArr.push(\n        <Character key={i}\n                   value={value[i]}\n                   currentBox={this.props.currentBox}\n                   isCurrentlyOver={this.isCurrentlyOver}\n                   currentlyOver={this.state.currentlyOver}\n                   removeGap={this.removeGap}\n                   />\n      )\n    }\n\n    return(\n      <div className=\"characters\">\n        {characterArr}\n      </div>\n    )\n  }\n}\n\nexport default Characters;\n","import React from 'react';\nimport Characters from '../components/boxes/characters/Characters';\nimport { DropTarget } from 'react-dnd';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport {arrayIsEqual, lengthOfToBox} from '../functions/index.js';\nimport * as gameLaws from '../components/game/GameLaws';\n\nconst boxTarget = {\n  hover(props, monitor, component) {\n  },\n  drop(props, monitor, component) {\n    // console.log(\"drop in box\");\n    let char = monitor.getItem().props;\n    let fromBox = char.currentBox;\n    let index = char.value.index;\n    let toBox = component.props;\n    let dispatch = props.dispatch;\n\n    console.log(toBox)\n    if(gameLaws.canMoveChar(char, toBox)) {\n      gameLaws.moveChar(char.value, lengthOfToBox(toBox), fromBox, toBox, dispatch);\n    }\n    else {\n      console.log(\"cant move\")\n    }\n  }\n}\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver({shallow: true})\n  }\n}\n\nclass Box extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(props)\n  }\n  render() {\n    // console.log(this.props.solutionCharArr)\n    const { connectDropTarget } = this.props;\n\n    return connectDropTarget(\n      <div className=\"box\">\n        <Characters\n          boxType={this.props.type}\n          letterCharArr={this.props.letterCharArr}\n          operandCharArr={this.props.operandCharArr}\n          solutionCharArr={this.props.solutionCharArr}\n          currentBox={this.props} />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nBox = DropTarget('character', boxTarget, collect)(Box);\nexport default connect(mapStateToProps)(Box);\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass LetterBox extends Box {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <Box type=\"letter\" />\n    );\n  }\n}\nexport default LetterBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass OperandBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      operands: \"+-×÷\",\n      droppable: [\"operand\"]\n    }\n  }\n  render() {\n    return(\n      <Box type=\"operand\" value={this.state.operands} />\n    );\n  }\n}\nexport default OperandBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass SolutionBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      droppable: [\"operand\", \"letter\"]\n    }\n  }\n  render() {\n    return(\n      <Box type=\"solution\" value=\"\"/>\n    );\n  }\n}\nexport default SolutionBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\nimport LetterBox from './LetterBox';\nimport OperandBox from './OperandBox';\nimport SolutionBox from './SolutionBox';\n\nclass Boxes extends React.Component {\n  render() {\n    return(\n      <div className=\"boxes\">\n        <LetterBox />\n        <OperandBox />\n        <SolutionBox />\n      </div>\n    );\n  }\n}\nexport default Boxes;\n","import React from 'react';\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: this.props.type\n    }\n  }\n  render() {\n    return(\n      <div className={\"button \" + this.state.type}>\n        {this.state.type}\n      </div>\n    )\n  }\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\n\nclass Buttons extends React.Component {\n  render() {\n    return(\n      <div className=\"buttons\">\n        <Button type=\"one\" />\n        <Button type=\"two\" />\n        <Button type=\"three\" />\n      </div>\n    )\n  }\n}\n\nexport default Buttons;\n","import React from 'react';\nimport Header from '../header/Header';\nimport Boxes from '../boxes/Boxes';\nimport Buttons from '../buttons/Buttons';\n\nimport { isBrowser, isMobile } from \"react-device-detect\";\nimport TouchBackend from 'react-dnd-touch-backend';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport { DragDropContextProvider } from 'react-dnd';\n\n\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      backend: null\n    }\n    if(isMobile) {\n      this.state = {\n        backend: TouchBackend\n      }\n    }\n    else if (isBrowser) {\n      this.state = {\n        backend: HTML5Backend\n      }\n    }\n  }\n  render() {\n    return (\n      <DragDropContextProvider backend={HTML5Backend}>\n        <div className=\"game-root\">\n          <Header />\n          <Boxes />\n          <Buttons />\n        </div>\n      </DragDropContextProvider>\n    );\n  }\n}\n\n// export default DragDropContext(TouchBackend)(Game);\nexport default Game;\n","import React from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport Game from '../components/game/Game.js';\n\nclass AppController extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return(\n      <BrowserRouter>\n        <Switch>\n          <Route path={`${process.env.PUBLIC_URL}/`} component={Game} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default AppController;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\n\nimport './index.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport { addChar, removeChar, submitAns } from './actions'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Routes from './routes';\n\nexport default() => <Routes />;\n"],"sourceRoot":""}