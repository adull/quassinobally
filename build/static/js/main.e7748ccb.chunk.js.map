{"version":3,"sources":["actions/index.js","components/game/GameLaws.js","functions/index.js","assets/audio/gun.wav","components/game/AppLaws.js","containers/Header.js","containers/Character.js","components/boxes/characters/Characters.js","containers/Box.js","components/boxes/LetterBox.js","components/boxes/OperandBox.js","components/boxes/SolutionBox.js","components/boxes/Boxes.js","components/buttons/Button.js","components/modal-content/Modal.js","components/modal-content/CorrectSolution.js","components/modal-content/IncorrectSolution.js","containers/Buttons.js","containers/Background.js","components/game/Game.js","containers/HomeButton.js","components/home/Home.js","components/instructions/Instructions.js","components/settings/ColorPicker.js","components/settings/ColorDisplay.js","components/settings/Range.js","containers/Settings.js","containers/PageController.js","routes/index.js","App.js","serviceWorker.js","index.js","reducers/index.js","assets/audio/cock.wav","assets/svg/back.svg"],"names":["__webpack_require__","d","__webpack_exports__","ADD_CHAR","REMOVE_CHAR","SUBMIT_ANS","TOGGLE_GAPS","NEW_PUZZLE","SET_PAGE","SET_BG_COLOR","SET_BOX_COLOR","SET_BOX_BORDER_WIDTH","SET_LETTER_COLOR","SET_BOXBORDER_COLOR","CLOSE_INCORRECT_MODAL","SET_HOME_BTN_BG_COLOR","SET_HOME_BTN_COLOR","SET_HOME_BTN_BORDER_COLOR","SET_HOME_BTN_BORDER_WIDTH","newPuzzle","submitAnswer","canMoveChar","moveChar","_reducers__WEBPACK_IMPORTED_MODULE_0__","_actions__WEBPACK_IMPORTED_MODULE_1__","dispatch","type","checkSolutionValidity","solutionCharArr","parenthesesArr","nonParenthesesArr","shitIsWrong","i","length","char","value","push","pop","shitIsWrongTwo","j","evaluateSolutionArr","charArr","alphabet","solutionExpression","valToAdd","includes","indexOf","String","prototype","replaceAll","search","replacement","this","replace","RegExp","solutionEvaluation","eval","_unused","props","answerEvaluation","letterCharArr","reasonIncorrect","isCorrectSolution","console","log","toBox","index","fromBox","letterMove","operandMove","box","getIndexOfHash","hash","array","identifier","getToBoxArr","operandCharArr","lengthOfToBox","module","exports","p","setPage","page","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setPageHome","bind","assertThisInitialized","appLaws","react_default","a","createElement","className","onClick","src","require","React","Component","connect","state","ownProps","charSourceDrag","beginDrag","Audio","cockSound","play","endDrag","removeGap","charSourceDrop","hover","monitor","component","getDecoratedComponentInstance","isCurrentlyOver","drop","hoverBoundingRect","findDOMNode","getBoundingClientRect","middleX","left","right","addToIndex","getClientOffset","x","getItem","dropOnHash","currentlyOver","currentBox","toBoxArr","functions","dropIndex","gameLaws","Character","_React$Component","pushLeft","pushRight","hoverLeft","hoverRight","inherits","createClass","key","setState","_this$props","connectDropTarget","connectDragSource","noGaps","letterColor","parseInt","toString","style","color","DragSource","dragSource","isDragging","DropTarget","dropTarget","isOverCurrent","isOver","shallow","Characters","removeAllGaps","item","isOverNothing","boxType","characterArr","containers_Character","boxTarget","gunSound","Box","boxColor","boxBorderColor","boxBorderWidth","backgroundColor","border","characters_Characters","LetterBox","containers_Box","OperandBox","operands","droppable","SolutionBox","Boxes","boxes_LetterBox","boxes_OperandBox","boxes_SolutionBox","Button","buttonText","toUpperCase","click","Modal","e","stopPropagation","nativeEvent","stopImmediatePropagation","show","stopClose","children","CorrectSolution","goHome","IncorrectSolution","incorrectString","closeModal","Buttons","buttons_Button","modal_content_Modal","correctSubmittedAnswer","incorrectSubmittedAnswer","modal_content_CorrectSolution","modal_content_IncorrectSolution","Background","bgColor","Game","containers_Header","containers_Background","boxes_Boxes","containers_Buttons","HomeButton","homeButtonBgColor","homeBtnBgColor","homeButtonBorderColor","homeBtnBorderColor","homeButtonColor","homeBtnColor","homeButtonBorderWidth","homeBtnBorderWidth","Home","setPageGame","setPageInstructions","setPageSettings","containers_HomeButton","Instructions","ColorPicker","updateRedVal","updateBlueVal","updateGreenVal","red","green","blue","rgbArray","updateColor","event","target","step","min","max","onChange","ColorDisplay","Range","updateVal","Settings","updateBackgroundColor","updateBoxColor","updateLetterColor","updateBoxBorderColor","updateHomeBtnBgColor","updateHomeBtnColor","updateHomeBtnBorderColor","updateHomeBtnBorderWidth","updateBoxBorderWidth","width","bgRed","bgGreen","bgBlue","boxRed","boxGreen","boxBlue","letterRed","letterGreen","letterBlue","boxBorderRed","boxBorderGreen","boxBorderBlue","homeBtnBgRed","homeBtnBgGreen","homeBtnBgBlue","homeBtnRed","homeBtnGreen","homeBtnBlue","homeBtnBorderRed","homeBtnBorderGreen","homeBtnBorderBlue","settings_ColorPicker","settings_ColorDisplay","settings_Range","PageController","showHome","home_Home","showGame","game_Game","showInstructions","instructions_Instructions","showSettings","containers_Settings","AppController","containers_PageController","App","isBrowser","lib","backend","HTML5Backend","routes","isMobile","TouchBackend","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","randomWords","makeHash","text","possible","charAt","Math","floor","random","makeCharArr","initialState","exactly","maxLength","answerSubmitted","lackingChars","invalidAnswer","quassinoballyApp","arguments","undefined","action","newChar","_Users_adlai_Documents_code_web_nineteen_quassinobally_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","_Users_adlai_Documents_code_web_nineteen_quassinobally_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","slice","charHash","removeIndex"],"mappings":"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","file":"static/js/main.e7748ccb.chunk.js","sourcesContent":["export const ADD_CHAR = 'ADD_CHAR'\nexport const REMOVE_CHAR = 'REMOVE_CHAR'\nexport const SUBMIT_ANS = 'SUBMIT_ANS'\nexport const TOGGLE_GAPS = 'TOGGLE_GAPS'\nexport const NEW_PUZZLE = 'NEW_PUZZLE'\nexport const SET_PAGE = 'SET_PAGE'\nexport const SET_BG_COLOR = 'SET_BG_COLOR'\nexport const SET_BOX_COLOR = 'SET_BOX_COLOR'\nexport const SET_BOX_BORDER_WIDTH = 'SET_BOX_BORDER_WIDTH'\nexport const SET_LETTER_COLOR = 'SET_LETTER_COLOR'\nexport const SET_BOXBORDER_COLOR = 'SET_BOXBORDER_COLOR'\nexport const CLOSE_INCORRECT_MODAL = 'CLOSE_INCORRECT_MODAL'\nexport const SET_HOME_BTN_BG_COLOR = 'SET_HOME_BTN_BG_COLOR'\nexport const SET_HOME_BTN_COLOR = 'SET_HOME_BTN_COLOR'\nexport const SET_HOME_BTN_BORDER_COLOR = 'SET_HOME_BTN_BORDER_COLOR'\nexport const SET_HOME_BTN_BORDER_WIDTH = 'SET_HOME_BTN_BORDER_WIDTH'\nexport const SUBMIT_INVALID_ANS = 'SUBMIT_INVALID_ANS'\nexport const SUBMIT_ANS_LACKING_CHARS = 'SUBMIT_ANS_LACKING_CHARS'\n\nexport function addChar(char, index, box) {\n  return{\n    type: ADD_CHAR,\n    char,\n    index,\n    box\n  }\n}\n\nexport function removeChar(char, index, box) {\n  return {\n    type: REMOVE_CHAR,\n    char,\n    index,\n    box\n  }\n}\n\nexport function submitAns(isCorrectSolution) {\n  return {\n    type: SUBMIT_ANS,\n    isCorrectSolution\n  }\n}\n\nexport function toggleGaps() {\n  return {\n    type: TOGGLE_GAPS\n  }\n}\n","import { createStore } from 'redux'\nimport reducer from '../../reducers'\nimport { addChar, removeChar, submitAns } from  '../../actions'\n\nexport function newPuzzle(dispatch) {\n  dispatch({\n    type: 'NEW_PUZZLE'\n  })\n}\n\nfunction checkSolutionValidity(solutionCharArr) {\n  let parenthesesArr = [];\n  let nonParenthesesArr = [];\n  let shitIsWrong = false;\n  for(let i = 0; i < solutionCharArr.length; i ++) {\n    let char = solutionCharArr[i].value;\n    let type = solutionCharArr[i].type;\n    if(char === \"(\" ) {\n      parenthesesArr.push(char);\n    }\n    else if(char === \")\") {\n      if(parenthesesArr.length > 0) {\n        parenthesesArr.pop();\n      }\n      else {\n        shitIsWrong = true;\n      }\n    }\n    else {\n      nonParenthesesArr.push(type);\n    }\n  }\n  if(nonParenthesesArr[nonParenthesesArr.length - 1] === \"operand\") {\n    return false;\n  }\n  if(shitIsWrong === true) {\n    return false;\n  }\n\n  if(parenthesesArr.length > 0) {\n    return false;\n  }\n  else {\n    let shitIsWrongTwo = false;\n    for(let j = 0; j < nonParenthesesArr.length; j ++) {\n      if( j % 2 === 0) {\n        if(nonParenthesesArr[j] !== \"letter\") {\n          shitIsWrongTwo = true;\n        }\n      }\n      else if( j % 2 === 1) {\n        if(nonParenthesesArr[j] !== \"operand\") {\n          shitIsWrongTwo = true;\n        }\n      }\n    }\n    return !shitIsWrongTwo;\n  }\n\n}\n\nfunction evaluateSolutionArr(charArr) {\n  var alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n  let solutionExpression = \"\";\n  for(let i = 0; i < charArr.length; i ++) {\n    let valToAdd = \"\";\n    if(alphabet.includes(charArr[i].value)) {\n      valToAdd = alphabet.indexOf(charArr[i].value)+1;\n    }\n    else {\n      valToAdd = charArr[i].value\n    }\n\n    solutionExpression += valToAdd\n  }\n\n  String.prototype.replaceAll = function(search, replacement) {\n    var target = this;\n    return target.replace(new RegExp(search, 'g'), replacement);\n  };\n\n  solutionExpression = solutionExpression.replaceAll(\"×\", \"*\")\n  solutionExpression = solutionExpression.replaceAll(\"÷\", \"/\")\n  let solutionEvaluation = -1;\n  try {\n    solutionEvaluation = eval(solutionExpression);\n  }\n  catch {\n    return \"HUGE ERROR\";\n  }\n\n  // console.log(solutionExpression)\n  return solutionEvaluation;\n}\n\nexport function submitAnswer(props) {\n  let dispatch = props.dispatch;\n\n  let validity = checkSolutionValidity(props.solutionCharArr);\n  if(validity === true) {\n    let answerEvaluation = evaluateSolutionArr(props.solutionCharArr)\n    if(props.letterCharArr.length > 0) {\n      // console.log(\"must use all characters\");\n      dispatch({\n        type: 'SUBMIT_ANS',\n        reasonIncorrect: 'characters',\n        isCorrectSolution: false\n      })\n      return;\n    }\n    if(answerEvaluation === \"HUGE ERROR\") {\n      dispatch({\n        type: 'SUBMIT_ANS',\n        reasonIncorrect: 'invalid',\n        isCorrectSolution: false\n\n      })\n    }\n    if(answerEvaluation % 27 === 0) {\n      console.log(\"correct solution\")\n      dispatch({\n        type: 'SUBMIT_ANS',\n        reasonIncorrect: '',\n        isCorrectSolution: true\n\n      })\n      return;\n    }\n    else {\n      console.log(\"incorrect solution\")\n      dispatch({\n        type: 'SUBMIT_ANS',\n        reasonIncorrect: 'miscalculation',\n        isCorrectSolution: false\n      })\n      return;\n    }\n  }\n  else {\n    console.log(\"solution is not valid\")\n    dispatch({\n      type: 'SUBMIT_ANS',\n      reasonIncorrect: 'invalid',\n      isCorrectSolution: false\n    })\n    return;\n  }\n\n}\n\nexport function canMoveChar(char, toBox) {\n  if(char.value.type === \"letter\") {\n    if(toBox.type === \"operand\") {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else if(char.value.type === \"operand\") {\n    if(toBox.type === \"letter\") {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else {\n    console.log(char.type)\n  }\n}\n\nexport function moveChar(char, index, fromBox, toBox, dispatch) {\n  // console.log(index)\n  if(char.type === \"letter\") {\n    letterMove(char, index, fromBox, toBox, dispatch);\n  }\n  else if(char.type === \"operand\") {\n    operandMove(char, index, fromBox, toBox, dispatch);\n  }\n}\n\nfunction letterMove(char, index, fromBox, toBox, dispatch) {\n  dispatch({\n    type: 'ADD_CHAR',\n    char: char,\n    index: index,\n    box: toBox\n  });\n  dispatch({\n    type: 'REMOVE_CHAR',\n    char: char,\n    index: index,\n    box: fromBox\n  });\n}\n\nfunction operandMove(char, index, fromBox, toBox, dispatch) {\n  if(toBox.type === \"operand\") {\n    dispatch({\n      type: 'REMOVE_CHAR',\n      char: char,\n      index: index,\n      box: fromBox\n    });\n  }\n  else if(toBox.type === \"solution\" && fromBox.type === \"operand\") {\n    dispatch({\n      type: 'ADD_CHAR',\n      char: char,\n      index: index,\n      box: toBox\n    });\n  }\n  else if(toBox.type === \"solution\" && fromBox.type === \"solution\") {\n    dispatch({\n      type: 'ADD_CHAR',\n      char: char,\n      index: index,\n      box: toBox\n    });\n    dispatch({\n      type: 'REMOVE_CHAR',\n      char: char,\n      index: index,\n      box: fromBox\n    });\n  }\n}\n","export default function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function getIndexOfHash(hash, array) {\n  let returnVal = null;\n  for(let i = 0; i < array.length; i ++) {\n    if(hash === array[i].identifier) {\n      return i;\n    }\n  }\n  // console.log(returnVal);\n  console.log(\"not found in index\")\n  return returnVal;\n}\n\nexport function getToBoxArr(toBox) {\n  if(toBox.type === \"letter\") {\n    return toBox.letterCharArr;\n  }\n  else if(toBox.type === \"operand\") {\n    return toBox.operandCharArr;\n  }\n  else if(toBox.type === \"solution\") {\n    return toBox.solutionCharArr;\n  }\n}\n\nexport function lengthOfToBox(toBox) {\n  if(toBox.type === \"letter\") {\n    return toBox.letterCharArr.length;\n  }\n  else if(toBox.type === \"operand\") {\n    return toBox.operandCharArr.length;\n  }\n  else if(toBox.type === \"solution\") {\n    return toBox.solutionCharArr.length;\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/gun.863baa79.wav\";","export function setPage(page, dispatch) {\n  dispatch({\n    type: 'SET_PAGE',\n    page: page\n  })\n}\n\nexport function setBackgroundColor(color, dispatch) {\n  dispatch({\n    type: 'SET_BG_COLOR',\n    color: color\n  })\n}\n\nexport function setBoxColor(color, dispatch) {\n  dispatch({\n    type: 'SET_BOX_COLOR',\n    color: color\n  })\n}\n\nexport function setLetterColor(color, dispatch) {\n  dispatch({\n    type: 'SET_LETTER_COLOR',\n    color: color\n  })\n}\n\nexport function setBoxBorderWidth(width, dispatch) {\n  dispatch({\n    type: 'SET_BOX_BORDER_WIDTH',\n    width: width\n  })\n}\n\nexport function setBoxBorderColor(color, dispatch) {\n  dispatch({\n    type: 'SET_BOXBORDER_COLOR',\n    color: color\n  })\n}\n\nexport function closeIncorrectModal(dispatch) {\n  dispatch({\n    type: 'CLOSE_INCORRECT_MODAL'\n  })\n}\n\nexport function setHomeBtnBgColor(color, dispatch) {\n  dispatch({\n    type: 'SET_HOME_BTN_BG_COLOR',\n    color: color\n  })\n}\n\nexport function setHomeBtnColor(color, dispatch) {\n  dispatch({\n    type: 'SET_HOME_BTN_COLOR',\n    color: color\n  })\n}\n\nexport function setHomeBtnBorderColor(color, dispatch) {\n  dispatch({\n    type: 'SET_HOME_BTN_BORDER_COLOR',\n    color: color\n  })\n}\n\nexport function setHomeBtnBorderWidth(width, dispatch) {\n  dispatch({\n    type: 'SET_HOME_BTN_BORDER_WIDTH',\n    width: width\n  })\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as appLaws from '../components/game/AppLaws';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.setPageHome = this.setPageHome.bind(this);\n  }\n\n  setPageHome() {\n    appLaws.setPage('home', this.props.dispatch)\n  }\n\n  render() {\n    return(\n      <div className=\"header\">\n        <div className=\"header-back-button\" onClick={this.setPageHome}>\n          <img src={require('../assets/svg/back.svg')} />\n          <div className=\"header-back-button-text\">Home</div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { findDOMNode } from 'react-dom';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport * as functions from '../functions';\nimport * as gameLaws from '../components/game/GameLaws';\n\nimport cockSound from '../assets/audio/cock.wav';\n\n\nfunction collectDrag(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }\n}\n\nfunction collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOverCurrent: monitor.isOver({shallow: true})\n  }\n}\n\nconst charSourceDrag = {\n  beginDrag(props) {\n    let cockAudio = new Audio(cockSound);\n    cockAudio.play();\n    let dispatch = props.dispatch;\n    dispatch({\n      type: 'TOGGLE_GAPS'\n    })\n    return {props};\n  },\n  endDrag(props) {\n    let dispatch = props.dispatch;\n    dispatch({\n      type: 'TOGGLE_GAPS'\n    })\n    props.removeGap();\n    return{props};\n  }\n};\n\nconst charSourceDrop = {\n  hover(props, monitor, component) {\n    let c = component.getDecoratedComponentInstance()\n    props.isCurrentlyOver(props.value.identifier)\n  },\n  drop(props, monitor, component) {\n    props.isCurrentlyOver('')\n    const hoverBoundingRect = (findDOMNode(\n\t\t\tcomponent,\n\t\t)).getBoundingClientRect();\n\n    let leftX = hoverBoundingRect.left;\n    let rightX = hoverBoundingRect.right;\n    let middleX = (leftX + rightX)/2;\n    let mouseX = monitor.getClientOffset().x;\n\n    let addToIndex = 0;\n    if(mouseX > middleX) {\n      addToIndex = 1;\n    }\n    // console.log(addToIndex)\n\n    let dispatch = props.dispatch;\n    let char = monitor.getItem().props.value;\n    let dropOnHash = props.currentlyOver;\n    let fromBox = monitor.getItem().props.currentBox;\n    let toBox = props.currentBox;\n    let toBoxArr = functions.getToBoxArr(toBox);\n    let dropIndex = functions.getIndexOfHash(dropOnHash, toBoxArr) + addToIndex;\n\n\n    if(gameLaws.canMoveChar(props, toBox)) {\n      gameLaws.moveChar(char, dropIndex, fromBox, toBox, dispatch);\n    }\n    else {\n      console.log(\"cant move\")\n    }\n  }\n};\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nexport class Character extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      type: props.value.type,\n      value: props.value.value,\n      identifier: props.value.identifier,\n      pushLeft: false,\n      pushRight: false\n    }\n    this.hoverLeft = this.hoverLeft.bind(this);\n    this.hoverRight = this.hoverRight.bind(this);\n  }\n\n  hoverLeft() {\n    this.setState({\n      pushLeft: true,\n      pushRight: false\n    })\n  }\n\n  hoverRight() {\n    this.setState({\n      pushLeft: false,\n      pushRight: true\n    })\n  }\n\n  render(){\n    // console.log(this.props.length)\n    let currentlyOver = this.props.currentlyOver;\n    let identifier = this.props.value.identifier;\n    const { connectDropTarget, connectDragSource } = this.props;\n    let pushLeft = (currentlyOver === identifier && !this.props.noGaps) ? \"push-left\" : \"\"\n\n    let red = (parseInt(255 - this.props.letterColor[0])).toString()\n    let green = (parseInt(255 - this.props.letterColor[1])).toString()\n    let blue = (parseInt(255 - this.props.letterColor[2])).toString()\n    let letterColor = \"rgb(\" + red + \", \" + green + \",\" + blue + \")\"\n\n    return connectDragSource(connectDropTarget(\n      <div className={\"length-\" + this.props.length + \" character \" + this.props.value.type + \"-character \" + pushLeft} style={{color: letterColor}}>\n        {this.props.value.value}\n      </div>\n    ))\n  }\n}\n\n\n\nCharacter = DragSource('character', charSourceDrag, collectDrag)(Character);\nCharacter = DropTarget('character', charSourceDrop, collectDrop)(Character);\nexport default connect(mapStateToProps)(Character);\n","import React from 'react';\nimport Character from '../../../containers/Character'\n\n\nclass Characters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentlyOver: ''\n    }\n    this.isCurrentlyOver = this.isCurrentlyOver.bind(this);\n    this.removeGap = this.removeGap.bind(this);\n    this.removeAllGaps = this.removeAllGaps.bind(this);\n  }\n\n  removeAllGaps() {\n    console.log(\"remove all gaps\");\n  }\n\n  isCurrentlyOver(item) {\n    if(!this.props.isOverNothing) {\n      this.setState({\n        currentlyOver: item\n      })\n    }\n  }\n\n  removeGap() {\n    this.setState({\n      currentlyOver: ''\n    })\n  }\n\n  render() {\n    // this is wild inefficient but it works will clean up later in\n    // getting this logic out of the render function\n    let boxType = this.props.boxType;\n    let value = [];\n    if(boxType === \"letter\") {\n      value = this.props.letterCharArr;\n    }\n    else if(boxType === \"operand\") {\n      value = this.props.operandCharArr;\n    }\n    else if(boxType === \"solution\") {\n      value = this.props.solutionCharArr;\n    }\n    let operandValuesArr = [\"+\",\"-\",\"×\",\"÷\",\"(\",\")\"];\n    let characterArr = []\n    for(var i = 0; i < value.length; i ++) {\n      characterArr.push(\n        <Character key={i}\n                   value={value[i]}\n                   currentBox={this.props.currentBox}\n                   isCurrentlyOver={this.isCurrentlyOver}\n                   currentlyOver={this.state.currentlyOver}\n                   removeGap={this.removeGap}\n                   length={value.length}\n                   />\n      )\n    }\n\n    return(\n      <div className=\"characters\">\n        {characterArr}\n      </div>\n    )\n  }\n}\n\nexport default Characters;\n","import React from 'react';\nimport Characters from '../components/boxes/characters/Characters';\nimport { DropTarget } from 'react-dnd';\nimport { findDOMNode } from 'react-dom';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport {arrayIsEqual, lengthOfToBox} from '../functions/index.js';\nimport * as gameLaws from '../components/game/GameLaws';\n\nimport gunSound from '../assets/audio/gun.wav';\n\nconst boxTarget = {\n  hover(props, monitor, component) {\n  },\n  drop(props, monitor, component) {\n    let gunAudio = new Audio(gunSound);\n    gunAudio.play();\n    let exclusivelyDropped = monitor.isOver({ shallow: true });\n    if(exclusivelyDropped) {\n      let char = monitor.getItem().props;\n      let fromBox = char.currentBox;\n      let index = char.value.index;\n      let toBox = component.props;\n      let dispatch = props.dispatch;\n\n      const hoverBoundingRect = (findDOMNode(\n  \t\t\tcomponent,\n  \t\t)).getBoundingClientRect();\n\n      let leftX = hoverBoundingRect.left;\n      let rightX = hoverBoundingRect.right;\n      let middleX = (leftX + rightX)/2;\n      let mouseX = monitor.getClientOffset().x;\n\n      let dropIndex = 0;\n      if(mouseX > middleX) {\n        dropIndex = lengthOfToBox(toBox);\n      }\n\n      if(gameLaws.canMoveChar(char, toBox)) {\n        gameLaws.moveChar(char.value, dropIndex, fromBox, toBox, dispatch);\n      }\n      else {\n        console.log(\"cant move\")\n      }\n    }\n  }\n}\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver({shallow: true})\n  }\n}\n\nclass Box extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let boxRed = (parseInt(255 - this.props.boxColor[0])).toString()\n    let boxGreen = (parseInt(255 - this.props.boxColor[1])).toString()\n    let boxBlue = (parseInt(255 - this.props.boxColor[2])).toString()\n    let boxColor = \"rgb(\" + boxRed + \", \" + boxGreen + \",\" + boxBlue + \")\"\n\n    let boxBorderWidth = this.props.boxBorderWidth;\n\n    let boxBorderRed = (parseInt(255 - this.props.boxBorderColor[0])).toString()\n    let boxBorderGreen = (parseInt(255 - this.props.boxBorderColor[1])).toString()\n    let boxBorderBlue = (parseInt(255 - this.props.boxBorderColor[2])).toString()\n    let boxBorderColor = boxBorderWidth + \"px solid rgb(\" + boxBorderRed + \", \" + boxBorderGreen + \",\" + boxBorderBlue + \")\"\n\n    const { connectDropTarget } = this.props;\n\n    return connectDropTarget(\n      <div className=\"box\" style={{backgroundColor: boxColor, border: boxBorderColor}}>\n        <Characters\n          boxType={this.props.type}\n          letterCharArr={this.props.letterCharArr}\n          operandCharArr={this.props.operandCharArr}\n          solutionCharArr={this.props.solutionCharArr}\n          currentBox={this.props}\n        />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nBox = DropTarget('character', boxTarget, collect)(Box);\nexport default connect(mapStateToProps)(Box);\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass LetterBox extends Box {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <Box type=\"letter\" />\n    );\n  }\n}\nexport default LetterBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass OperandBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      operands: \"+-×÷\",\n      droppable: [\"operand\"]\n    }\n  }\n  render() {\n    return(\n      <Box type=\"operand\" value={this.state.operands} />\n    );\n  }\n}\nexport default OperandBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass SolutionBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      droppable: [\"operand\", \"letter\"]\n    }\n  }\n  render() {\n    return(\n      <Box type=\"solution\" value=\"\"/>\n    );\n  }\n}\nexport default SolutionBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\nimport LetterBox from './LetterBox';\nimport OperandBox from './OperandBox';\nimport SolutionBox from './SolutionBox';\n\nclass Boxes extends React.Component {\n  render() {\n    return(\n      <div className=\"boxes\">\n        <LetterBox />\n        <OperandBox />\n        <SolutionBox />\n      </div>\n    );\n  }\n}\nexport default Boxes;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\n\n// import * as gameLaws from '../components/game/GameLaws';\nimport * as gameLaws from '../game/GameLaws';\n\nimport gunSound from '../../assets/audio/gun.wav';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    let buttonText = this.props.type\n      .replace(/-/g, ' ')\n      .replace(/^./, function(x){return x.toUpperCase()})\n\n    this.state = {\n      type: buttonText\n    }\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    // console.log(\"click\")\n    let gunAudio = new Audio(gunSound);\n    gunAudio.play();\n    if(this.state.type === \"New word\") {\n      // console.log(this.props.dispatch);\n      gameLaws.newPuzzle(this.props.dispatch)\n    }\n    if(this.state.type === \"Submit\") {\n      // console.log(this.props)\n      gameLaws.submitAnswer(this.props);\n    }\n  }\n\n  render() {\n    return(\n      <div className={\"button \" + this.state.type} onClick={this.click}>\n        {this.state.type}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Button);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nclass Modal extends React.Component {\n  stopClose(e) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n  }\n\n  render() {\n    if(!this.props.show) {\n      return null;\n    }\n    return (\n      <div className=\"modal-backdrop\">\n        <div className={\"modal\"} onClick={(e) => this.stopClose(e)}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(mapStateToProps)(Modal);\n","import React from 'react';\n// import * as actions from '../../actions';\nimport * as gameLaws from '../game/GameLaws';\nimport * as appLaws from '../game/AppLaws';\n\nclass CorrectSolution extends React.Component {\n  constructor() {\n    super();\n    this.newPuzzle = this.newPuzzle.bind(this);\n    this.goHome = this.goHome.bind(this);\n  }\n  newPuzzle() {\n    gameLaws.newPuzzle(this.props.dispatch);\n  }\n  goHome() {\n    appLaws.setPage('home', this.props.dispatch);\n    gameLaws.newPuzzle(this.props.dispatch);\n  }\n  render() {\n    if(this.props.show) {\n      return(\n        <div className=\"modal-content\">\n          <div className=\"modal-title-section\">\n            <div className=\"modal-title\">\n              Correct solution!\n            </div>\n            <div className=\"modal-subtitle\">\n              You solved the puzzle in x seconds!\n            </div>\n          </div>\n          <div className=\"correct-buttons\">\n            <div className=\"button next-puzzle\" onClick={this.newPuzzle}>\n              Another Puzzle\n            </div>\n            <div className=\"button back-home\" onClick={this.goHome}>\n              Home\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return null;\n    }\n\n  }\n}\n\nexport default CorrectSolution;\n","import React from 'react';\nimport * as appLaws from '../game/AppLaws'\nimport * as gameLaws from '../game/GameLaws'\n\nclass IncorrectSolution extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reasonIncorrect: props.reasonIncorrect,\n      incorrectString: ''\n    }\n    this.goHome = this.goHome.bind(this);\n  }\n  componentWillMount() {\n    console.log(\"construct subtitle\")\n    let reasonIncorrect = this.state.reasonIncorrect;\n    if(reasonIncorrect === \"characters\") {\n      this.setState({\n        incorrectString: \"You must use all of the characters in the character box in your solution.\"\n      })\n    }\n    else if(reasonIncorrect === \"invalid\") {\n      this.setState({\n        incorrectString: \"There is a problem with your solution. Make sure you include an operand in between each letter and have used any parentheses correctly.\"\n      })\n    }\n    else if(reasonIncorrect === \"miscalculation\") {\n      this.setState({\n        incorrectString: \"There was a problem with the computation.\"\n      })\n    }\n\n    else {\n      console.log(reasonIncorrect);\n    }\n  }\n  goHome() {\n    appLaws.setPage('home', this.props.dispatch);\n    gameLaws.newPuzzle(this.props.dispatch);\n  }\n  render() {\n    if(this.props.show) {\n      return(\n          <div className=\"modal-content\">\n            <div className=\"modal-title-section\">\n              <div className=\"modal-title\">\n                Incorrect Solution.\n              </div>\n              <div className=\"modal-subtitle\">\n                {this.state.incorrectString}\n              </div>\n            </div>\n            <div className=\"correct-buttons\">\n              <div className=\"button close\" onClick={this.props.closeModal}>\n                Retry\n              </div>\n              <div className=\"button back-home\" onClick={this.goHome}>\n                Home\n              </div>\n            </div>\n          </div>\n        )\n    }\n    else {\n      return null;\n    }\n  }\n}\n\nexport default IncorrectSolution;\n","import React from 'react';\nimport Button from '../components/buttons/Button';\n// import Button from './Button';\nimport Modal from '../components/modal-content/Modal';\nimport CorrectSolution from '../components/modal-content/CorrectSolution';\nimport IncorrectSolution from '../components/modal-content/IncorrectSolution';\n\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\nimport * as appLaws from '../components/game/AppLaws';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Buttons extends React.Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n  closeModal() {\n    appLaws.closeIncorrectModal(this.props.dispatch)\n  }\n  render() {\n    console.log()\n    let dispatch = this.props.dispatch;\n    return(\n      <div className=\"buttons\">\n        <Button type=\"new-word\" />\n        <Button dispatch={dispatch} type=\"submit\" />\n        <Button type=\"three\" />\n        <Modal show={this.props.correctSubmittedAnswer || this.props.incorrectSubmittedAnswer}>\n          <CorrectSolution dispatch={dispatch} show={this.props.correctSubmittedAnswer} />\n          <IncorrectSolution reasonIncorrect={this.props.reasonIncorrect} dispatch={dispatch} closeModal={this.closeModal} show={this.props.incorrectSubmittedAnswer} />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Buttons);\n","import React from 'react'\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Background extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      backgroundColor: ''\n    }\n    this.backgroundColor = this.backgroundColor.bind(this);\n  }\n\n  backgroundColor() {\n    // return \"blue\"\n    this.setState({\n      backgroundColor: \"blue\"\n    })\n  }\n\n  render() {\n    let red = (parseInt(255 - this.props.backgroundColor[0])).toString()\n    let green = (parseInt(255 - this.props.backgroundColor[1])).toString()\n    let blue = (parseInt(255 - this.props.backgroundColor[2])).toString()\n    let bgColor = \"rgb(\" + red + \", \" + green + \",\" + blue + \")\"\n    return(\n      <div className=\"background\" style={{backgroundColor:  bgColor}}>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Background);\n","import React from 'react';\nimport Header from '../../containers/Header';\nimport Boxes from '../boxes/Boxes';\nimport Buttons from '../../containers/Buttons';\nimport Background from '../../containers/Background';\n\n\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n  }\n  render() {\n    return (\n      <div className=\"game-root\">\n        <Header />\n        <Background />\n        <Boxes />\n        <Buttons />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport * as appLaws from '../components/game/AppLaws';\n\nimport gunSound from '../assets/audio/gun.wav';\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nclass HomeButton extends React.Component {\n  constructor() {\n    super();\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    this.props.onClick();\n    let gunAudio = new Audio(gunSound);\n    gunAudio.play();\n  }\n  render() {\n    let homeButtonBgRed = (parseInt(255 - this.props.homeBtnBgColor[0])).toString()\n    let homeButtonBgGreen = (parseInt(255 - this.props.homeBtnBgColor[1])).toString()\n    let homeButtonBgBlue = (parseInt(255 - this.props.homeBtnBgColor[2])).toString()\n    let homeButtonBgColor = \"rgb(\" + homeButtonBgRed + \", \" + homeButtonBgGreen + \",\" + homeButtonBgBlue + \")\"\n\n    let homeButtonBorderRed = (parseInt(255 - this.props.homeBtnBorderColor[0])).toString()\n    let homeButtonBorderGreen = (parseInt(255 - this.props.homeBtnBorderColor[1])).toString()\n    let homeButtonBorderBlue = (parseInt(255 - this.props.homeBtnBorderColor[2])).toString()\n    let homeButtonBorderColor = \"rgb(\" + homeButtonBorderRed + \", \" + homeButtonBorderGreen + \",\" + homeButtonBorderBlue + \")\"\n\n    let homeButtonColorRed = (parseInt(255 - this.props.homeBtnColor[0])).toString()\n    let homeButtonColorGreen = (parseInt(255 - this.props.homeBtnColor[1])).toString()\n    let homeButtonColorBlue = (parseInt(255 - this.props.homeBtnColor[2])).toString()\n    let homeButtonColor = \"rgb(\" + homeButtonColorRed + \", \" + homeButtonColorGreen + \",\" + homeButtonColorBlue + \")\"\n\n    let homeButtonBorderWidth = this.props.homeBtnBorderWidth;\n\n    return(\n      <div className=\"button\"\n           onClick={this.click}\n           style={{backgroundColor: homeButtonBgColor,\n                   border: homeButtonBorderWidth + \"px solid \" + homeButtonBorderColor,\n                   color: homeButtonColor\n                 }}\n      >\n        {this.props.buttonText}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(HomeButton);\n","import React from 'react'\nimport Background from '../../containers/Background';\nimport * as appLaws from '../game/AppLaws';\n\nimport HomeButton from '../../containers/HomeButton';\n\nimport gunSound from '../../assets/audio/gun.wav';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.setPageGame = this.setPageGame.bind(this)\n    this.setPageInstructions = this.setPageInstructions.bind(this)\n    this.setPageSettings = this.setPageSettings.bind(this)\n  }\n  setPageGame() {\n    appLaws.setPage('game', this.props.dispatch)\n  }\n  setPageInstructions() {\n    appLaws.setPage('instructions', this.props.dispatch)\n  }\n  setPageSettings() {\n    appLaws.setPage('settings', this.props.dispatch)\n  }\n  render() {\n    return(\n      <div className=\"page home-page\">\n        <Background />\n        <div className=\"home-page-title\">\n          Quassinobally\n        </div>\n        <div className=\"home-page-buttons\">\n          <HomeButton onClick={this.setPageGame} buttonText={\"Play\"} />\n          <HomeButton onClick={this.setPageInstructions} buttonText={\"Instructions\"} />\n          <HomeButton onClick={this.setPageSettings} buttonText={\"Settings\"} />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport Header from '../../containers/Header';\nimport Background from '../../containers/Background'\n\nclass Instructions extends React.Component {\n  render() {\n    return(\n      <div className=\"page instructions-page\">\n        <Header />\n        <Background />\n\n      </div>\n    )\n  }\n}\n\nexport default Instructions;\n","import React from 'react';\n\nclass ColorPicker extends React.Component {\n  constructor() {\n    super();\n    this.updateRedVal = this.updateRedVal.bind(this);\n    this.updateBlueVal = this.updateBlueVal.bind(this);\n    this.updateGreenVal = this.updateGreenVal.bind(this);\n  }\n\n  updateColor(red, green, blue) {\n    let rgbArray = [red, green, blue]\n    this.props.updateColor(rgbArray)\n  }\n\n  updateRedVal(event) {\n    // console.log(\"update rede val\")\n    let red = event.target.value;\n    let green = this.props.green;\n    let blue = this.props.blue;\n    this.updateColor(red, green, blue)\n  }\n\n  updateGreenVal(event) {\n    let red = this.props.red;\n    let green = event.target.value;\n    let blue = this.props.blue;\n    this.updateColor(red, green, blue)\n  }\n\n  updateBlueVal(event) {\n    let red = this.props.red;\n    let green = this.props.green;\n    let blue = event.target.value;\n    this.updateColor(red, green, blue)\n  }\n\n\n\n  render() {\n    return(\n      <div className=\"color-picker\">\n        <input type=\"range\" className=\"color-selector\" step=\"1\" min=\"0\" max=\"255\" value={this.props.red} onChange={this.updateRedVal} />\n        <input type=\"range\" className=\"color-selector\" step=\"1\" min=\"0\" max=\"255\" value={this.props.green} onChange={this.updateGreenVal} />\n        <input type=\"range\" className=\"color-selector\" step=\"1\" min=\"0\" max=\"255\" value={this.props.blue} onChange={this.updateBlueVal} />\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker;\n","import React from 'react';\n\nclass ColorDisplay extends React.Component {\n  constructor() {\n    super();\n\n  }\n  render() {\n    let red = (parseInt(255 - this.props.red)).toString()\n    let green = (parseInt(255 - this.props.green)).toString()\n    let blue = (parseInt(255 - this.props.blue)).toString()\n    let boxColor = \"rgb(\" + red + \", \" + green + \",\" + blue + \")\"\n    return (\n      <div className=\"color-display\" style={{backgroundColor: boxColor}}>\n        <div style={{color: boxColor}}>nut</div>\n      </div>\n    )\n  }\n}\n\nexport default ColorDisplay;\n","import React from 'react';\n\nclass Range extends React.Component {\n  constructor() {\n    super();\n    this.updateVal = this.updateVal.bind(this);\n  }\n\n  updateVal(event) {\n    this.props.updateVal(event.target.value)\n  }\n\n  render() {\n    return (\n      <input type=\"range\" step={this.props.step} min={this.props.min} max={this.props.max} value={this.props.value} onChange={this.updateVal} />\n    )\n  }\n}\n\nexport default Range;\n","import React from 'react'\nimport Header from './Header';\nimport ColorPicker from '../components/settings/ColorPicker'\nimport ColorDisplay from '../components/settings/ColorDisplay'\nimport Range from '../components/settings/Range';\nimport Background from './Background'\n\n\nimport { connect } from 'react-redux';\n\nimport * as appLaws from '../components/game/AppLaws';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n\n    this.updateBackgroundColor = this.updateBackgroundColor.bind(this);\n    this.updateBoxColor = this.updateBoxColor.bind(this);\n    this.updateLetterColor = this.updateLetterColor.bind(this);\n    this.updateBoxBorderColor = this.updateBoxBorderColor.bind(this);\n    this.updateHomeBtnBgColor = this.updateHomeBtnBgColor.bind(this);\n    this.updateHomeBtnColor = this.updateHomeBtnColor.bind(this);\n    this.updateHomeBtnBorderColor = this.updateHomeBtnBorderColor.bind(this);\n    this.updateHomeBtnBorderWidth = this.updateHomeBtnBorderWidth.bind(this);\n    this.updateBoxBorderWidth = this.updateBoxBorderWidth.bind(this);\n  }\n\n  updateBackgroundColor(color) {\n    appLaws.setBackgroundColor(color, this.props.dispatch)\n  }\n\n  updateBoxColor(color) {\n    appLaws.setBoxColor(color, this.props.dispatch)\n  }\n\n  updateBoxBorderWidth(width) {\n    appLaws.setBoxBorderWidth(width, this.props.dispatch)\n  }\n\n  updateLetterColor(color) {\n    appLaws.setLetterColor(color, this.props.dispatch)\n  }\n\n  updateBoxBorderColor(color) {\n    appLaws.setBoxBorderColor(color, this.props.dispatch)\n  }\n\n  updateHomeBtnBgColor(color) {\n    appLaws.setHomeBtnBgColor(color, this.props.dispatch)\n  }\n\n  updateHomeBtnColor(color) {\n    appLaws.setHomeBtnColor(color, this.props.dispatch)\n  }\n\n  updateHomeBtnBorderColor(color) {\n    appLaws.setHomeBtnBorderColor(color, this.props.dispatch)\n  }\n\n  updateHomeBtnBorderWidth(width) {\n    appLaws.setHomeBtnBorderWidth(width, this.props.dispatch)\n  }\n\n  render() {\n    let bgRed = this.props.backgroundColor[0];\n    let bgGreen = this.props.backgroundColor[1];\n    let bgBlue = this.props.backgroundColor[2];\n\n    let boxRed = this.props.boxColor[0];\n    let boxGreen = this.props.boxColor[1];\n    let boxBlue = this.props.boxColor[2];\n\n    let letterRed = this.props.letterColor[0];\n    let letterGreen = this.props.letterColor[1];\n    let letterBlue = this.props.letterColor[2];\n\n    let boxBorderWidth = this.props.boxBorderWidth;\n\n    let boxBorderRed = this.props.boxBorderColor[0];\n    let boxBorderGreen = this.props.boxBorderColor[1];\n    let boxBorderBlue = this.props.boxBorderColor[2];\n\n    let homeBtnBgRed = this.props.homeBtnBgColor[0];\n    let homeBtnBgGreen = this.props.homeBtnBgColor[1];\n    let homeBtnBgBlue = this.props.homeBtnBgColor[2];\n\n    let homeBtnRed = this.props.homeBtnColor[0];\n    let homeBtnGreen = this.props.homeBtnColor[1];\n    let homeBtnBlue = this.props.homeBtnColor[2];\n\n    let homeBtnBorderRed = this.props.homeBtnBorderColor[0];\n    let homeBtnBorderGreen = this.props.homeBtnBorderColor[1];\n    let homeBtnBorderBlue = this.props.homeBtnBorderColor[2];\n\n    let homeBtnBorderWidth = this.props.homeBtnBorderWidth;\n    console.log(homeBtnBorderWidth)\n\n    return(\n      <div className=\"page settings-page\">\n        <Header />\n        <Background />\n        <div className=\"settings-modifier\">\n          <div className=\"background-color\">\n            Background Color\n          </div>\n          <ColorPicker red={bgRed} green={bgGreen} blue={bgBlue} updateColor={this.updateBackgroundColor}/>\n          <div className=\"box-color\">\n            Box Color\n          </div>\n          <ColorPicker red={boxRed} green={boxGreen} blue={boxBlue} updateColor={this.updateBoxColor}/>\n          <ColorDisplay red={boxRed} green={boxGreen} blue={boxBlue}/>\n          <div className=\"box-border-width\">\n            Box Border Width\n          </div>\n          <Range step=\"1\" min=\"0\" max=\"15\" value={boxBorderWidth} updateVal={this.updateBoxBorderWidth} />\n          <div className=\"letter-color\">\n            Letter color\n          </div>\n          <ColorPicker red={letterRed} green={letterGreen} blue={letterBlue} updateColor={this.updateLetterColor} />\n          <ColorDisplay red={letterRed} green={letterGreen} blue={letterBlue}/>\n          <div className=\"letter-color\">\n            Box Border Color\n          </div>\n          <ColorPicker red={boxBorderRed} green={boxBorderGreen} blue={boxBorderBlue} updateColor={this.updateBoxBorderColor} />\n          <ColorDisplay red={boxBorderRed} green={boxBorderGreen} blue={boxBorderBlue}/>\n          <div className=\"home-button-background-color\">\n            Home Button Background Color\n          </div>\n          <ColorPicker red={homeBtnBgRed} green={homeBtnBgGreen} blue={homeBtnBgBlue} updateColor={this.updateHomeBtnBgColor} />\n          <ColorDisplay red={homeBtnBgRed} green={homeBtnBgGreen} blue={homeBtnBgBlue}/>\n          <div className=\"home-button-background-color\">\n            Home Button Text Color\n          </div>\n          <ColorPicker red={homeBtnRed} green={homeBtnGreen} blue={homeBtnBlue} updateColor={this.updateHomeBtnColor} />\n          <ColorDisplay red={homeBtnRed} green={homeBtnGreen} blue={homeBtnBlue}/>\n          <div className=\"home-button-background-color\">\n            Home Button Border Color\n          </div>\n          <ColorPicker red={homeBtnBorderRed} green={homeBtnBorderGreen} blue={homeBtnBorderBlue} updateColor={this.updateHomeBtnBorderColor} />\n          <ColorDisplay red={homeBtnBorderRed} green={homeBtnBorderGreen} blue={homeBtnBorderBlue}/>\n          <div className=\"home-button-border-width\">\n            Home Button Border Width\n          </div>\n          <Range step=\"1\" min=\"0\" max=\"10\" value={homeBtnBorderWidth} updateVal={this.updateHomeBtnBorderWidth} />\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Home from '../components/home/Home';\nimport Game from '../components/game/Game';\nimport Instructions from '../components/instructions/Instructions';\n// import Settings from '../components/settings/Settings';\nimport Settings from '../containers/Settings';\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nclass PageController extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if(this.props.showHome) {\n      return(\n        <Home dispatch={this.props.dispatch}/>\n      )\n    }\n    else if(this.props.showGame) {\n      return(\n        <Game dispatch={this.props.dispatch}/>\n      )\n    }\n    else if(this.props.showInstructions) {\n      return(\n        <Instructions dispatch={this.props.dispatch}/>\n      )\n    }\n    else if(this.props.showSettings) {\n      return (\n        <Settings />\n      )\n    }\n    else {\n      return <div>you fuckdedup</div>\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps)(PageController);\n","import React from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport Game from '../components/game/Game.js';\nimport PageController from '../containers/PageController';\n\nclass AppController extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return(\n      <PageController />\n    )\n  }\n}\n\nexport default AppController;\n","import React from 'react';\nimport Routes from './routes';\n// import AppController from './containers/AppController';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport TouchBackend from 'react-dnd-touch-backend';\nimport { isBrowser, isMobile } from 'react-device-detect';\n\nimport { DragDropContextProvider } from 'react-dnd';\n\nclass App extends React.Component {\n  render() {\n    if(isBrowser) {\n      console.log(\"is browser\")\n      return(\n        <DragDropContextProvider backend={HTML5Backend}>\n          <Routes />\n        </DragDropContextProvider>\n      )\n    }\n    else if(isMobile) {\n      console.log(\"is mobile\")\n      return(\n        <DragDropContextProvider backend={TouchBackend}>\n          <Routes />\n        </DragDropContextProvider>\n      )\n    }\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\n\nimport './index.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport { addChar, removeChar, submitAns } from './actions'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n  ADD_CHAR, REMOVE_CHAR, SUBMIT_ANS, TOGGLE_GAPS, NEW_PUZZLE,\n  SET_PAGE, SET_BG_COLOR, SET_BOX_COLOR, SET_LETTER_COLOR, SET_BOX_BORDER_WIDTH,\n  SET_BOXBORDER_COLOR, CLOSE_INCORRECT_MODAL, SET_HOME_BTN_BG_COLOR,\n  SET_HOME_BTN_COLOR, SET_HOME_BTN_BORDER_COLOR, SET_HOME_BTN_BORDER_WIDTH\n} from '../actions'\nimport {getCompositeCharArr, getIndexOfHash} from '../functions';\n\nvar randomWords = require('random-words');\n\nfunction randomWord() {\n  let words = [\"hat\", \"man\", \"has\"]\n  return words[Math.floor(Math.random() * words.length)];\n}\n\nfunction makeHash() {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < 15; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\nfunction makeCharArr(value, type) {\n  let charArr = [];\n  for(var  i = 0; i < value.length; i ++) {\n    charArr.push({\n      type: type,\n      value: value[i],\n      identifier: makeHash()\n    })\n  }\n  return charArr\n}\n\nlet operands = \"+-×÷()\";\n\n// use in prod\nlet randWord = randomWords({exactly:1, maxLength: 10})[0];\n\n// use in dev\n// let randWord = randomWord();\n\nconst initialState = {\n  letterCharArr: makeCharArr(randWord, 'letter'),\n  operandCharArr: makeCharArr(operands, 'operand'),\n  solutionCharArr: [],\n  noGaps: true,\n  answerSubmitted: false,\n  reasonIncorrect: '',\n  correctSubmittedAnswer: false,\n  incorrectSubmittedAnswer: false,\n  lackingChars: false,\n  invalidAnswer: false,\n  showHome: true,\n  showGame: false,\n  showInstructions: false,\n  showSettings: false,\n  backgroundColor: [0,128,255],\n  boxColor: [0, 255, 255],\n  letterColor: [0, 0, 255],\n  boxBorderWidth: 3,\n  boxBorderColor: [0, 0, 255],\n  homeBtnBgColor: [0, 128, 255],\n  homeBtnColor: [255, 255, 255],\n  homeBtnBorderColor: [255, 255, 255],\n  homeBtnBorderWidth: 2,\n}\n\nfunction quassinoballyApp(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CHAR:\n      let newChar = {\n        type: action.char.type,\n        value: action.char.value,\n        identifier: makeHash()\n      }\n      if(action.box.type === \"letter\") {\n        return {\n          ...state,\n          letterCharArr: [\n            ...state.letterCharArr.slice(0, action.index),\n            newChar,\n            ...state.letterCharArr.slice(action.index)\n          ]\n        }\n      }\n      else if(action.box.type === \"operand\") {\n        return {\n          ...state,\n          operandCharArr: [\n            ...state.operandCharArr.slice(0, action.index),\n            newChar,\n            ...state.operandCharArr.slice(action.index)\n          ]\n        }\n      }\n      else if(action.box.type === \"solution\") {\n        return {\n          ...state,\n          solutionCharArr: [\n            ...state.solutionCharArr.slice(0, action.index),\n            newChar,\n            ...state.solutionCharArr.slice(action.index)\n          ]\n        }\n      }\n      else {\n      }\n    case REMOVE_CHAR:\n      let charHash = action.char.identifier;\n      if(action.box.type === \"letter\") {\n        let removeIndex = getIndexOfHash(charHash, state.letterCharArr);\n        return {\n          ...state,\n          letterCharArr: [\n            ...state.letterCharArr.slice(0, removeIndex),\n            ...state.letterCharArr.slice(removeIndex + 1, )\n          ]\n        }\n        return state;\n      }\n      else if(action.box.type === \"solution\") {\n        let removeIndex = getIndexOfHash(charHash, state.solutionCharArr);\n        return {\n          ...state,\n          solutionCharArr: [\n            ...state.solutionCharArr.slice(0, removeIndex),\n            ...state.solutionCharArr.slice(removeIndex + 1, )\n          ]\n        }\n        return state;\n      }\n      else {\n        console.log(action.box.type)\n      }\n      return state;\n    case SUBMIT_ANS:\n      return {\n        ...state,\n        reasonIncorrect: action.reasonIncorrect,\n        correctSubmittedAnswer: action.isCorrectSolution,\n        incorrectSubmittedAnswer: !action.isCorrectSolution\n      }\n    case TOGGLE_GAPS:\n      return {\n        ...state,\n        noGaps: !state.noGaps\n      }\n    case NEW_PUZZLE:\n      return {\n        ...state,\n        letterCharArr: makeCharArr(randomWords({exactly:1, maxLength: 10})[0], 'letter'),\n        operandCharArr: makeCharArr(operands, 'operand'),\n        solutionCharArr: [],\n        noGaps: true,\n        answerSubmitted: false,\n        correctSubmittedAnswer: false,\n        incorrectSubmittedAnswer: false\n      }\n    case SET_PAGE:\n      if(action.page === \"home\") {\n        return {\n          ...state,\n          showHome: true,\n          showGame: false,\n          showInstructions: false,\n          showSettings: false\n        }\n      }\n      else if(action.page === \"game\") {\n        return {\n          ...state,\n          showHome: false,\n          showGame: true,\n          showInstructions: false,\n          showSettings: false\n        }\n      }\n      else if(action.page === \"instructions\") {\n        return {\n          ...state,\n          showHome: false,\n          showGame: false,\n          showInstructions: true,\n          showSettings: false\n        }\n      }\n      else if(action.page === \"settings\") {\n        return {\n          ...state,\n          showHome: false,\n          showGame: false,\n          showInstructions: false,\n          showSettings: true\n        }\n      }\n    case SET_BG_COLOR:\n      return {\n        ...state,\n        backgroundColor: action.color\n      }\n    case SET_BOX_COLOR:\n      return {\n        ...state,\n        boxColor: action.color\n      }\n    case SET_LETTER_COLOR:\n      return {\n        ...state,\n        letterColor: action.color\n      }\n    case SET_BOX_BORDER_WIDTH:\n      return {\n        ...state,\n        boxBorderWidth: action.width\n      }\n    case SET_BOXBORDER_COLOR:\n      return {\n        ...state,\n        boxBorderColor: action.color\n      }\n    case CLOSE_INCORRECT_MODAL:\n      return {\n        ...state,\n        incorrectSubmittedAnswer: false\n      }\n    case SET_HOME_BTN_BG_COLOR:\n      return {\n        ...state,\n        homeBtnBgColor: action.color\n      }\n    case SET_HOME_BTN_COLOR:\n      return {\n        ...state,\n        homeBtnColor: action.color\n      }\n    case SET_HOME_BTN_BORDER_COLOR:\n      return {\n        ...state,\n        homeBtnBorderColor: action.color\n      }\n    case SET_HOME_BTN_BORDER_WIDTH:\n      return {\n        ...state,\n        homeBtnBorderWidth: action.width\n      }\n\n\n    default:\n      return state\n  }\n}\n\nexport default quassinoballyApp;\n","module.exports = __webpack_public_path__ + \"static/media/cock.e1b8dc8a.wav\";","module.exports = __webpack_public_path__ + \"static/media/back.9c17417b.svg\";"],"sourceRoot":""}