{"version":3,"sources":["actions/index.js","components/game/GameLaws.js","functions/index.js","components/game/AppLaws.js","containers/Header.js","containers/Character.js","components/boxes/characters/Characters.js","containers/Box.js","components/boxes/LetterBox.js","components/boxes/OperandBox.js","components/boxes/SolutionBox.js","components/boxes/Boxes.js","components/buttons/Button.js","components/modal-content/Modal.js","components/modal-content/CorrectSolution.js","components/modal-content/IncorrectSolution.js","containers/Buttons.js","containers/Background.js","components/game/Game.js","components/home/Home.js","components/instructions/Instructions.js","components/settings/ColorPicker.js","components/settings/ColorDisplay.js","containers/Settings.js","containers/PageController.js","routes/index.js","serviceWorker.js","index.js","App.js","reducers/index.js","assets/svg/back.svg"],"names":["__webpack_require__","d","__webpack_exports__","ADD_CHAR","REMOVE_CHAR","SUBMIT_ANS","TOGGLE_GAPS","NEW_PUZZLE","SET_PAGE","SET_BG_COLOR","SET_BOX_COLOR","SET_LETTER_COLOR","SET_BOXBORDER_COLOR","newPuzzle","submitAnswer","canMoveChar","moveChar","_reducers__WEBPACK_IMPORTED_MODULE_0__","_actions__WEBPACK_IMPORTED_MODULE_1__","dispatch","type","checkSolutionValidity","solutionCharArr","parenthesesArr","nonParenthesesArr","shitIsWrong","i","length","char","value","push","pop","shitIsWrongTwo","j","evaluateSolutionArr","charArr","alphabet","solutionExpression","valToAdd","includes","indexOf","String","prototype","replaceAll","search","replacement","this","replace","RegExp","console","log","solutionEvaluation","eval","props","answerEvaluation","letterCharArr","alert","isCorrectSolution","toBox","index","fromBox","letterMove","operandMove","box","getIndexOfHash","hash","array","identifier","getToBoxArr","operandCharArr","lengthOfToBox","setPage","page","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setPageHome","bind","assertThisInitialized","appLaws","react_default","a","createElement","className","onClick","src","require","React","Component","connect","state","ownProps","charSourceDrop","hover","monitor","component","getDecoratedComponentInstance","isCurrentlyOver","drop","hoverBoundingRect","findDOMNode","getBoundingClientRect","middleX","left","right","addToIndex","getClientOffset","x","getItem","dropOnHash","currentlyOver","currentBox","toBoxArr","functions","dropIndex","gameLaws","Character","_React$Component","pushLeft","pushRight","hoverLeft","hoverRight","inherits","createClass","key","setState","_this$props","connectDropTarget","connectDragSource","noGaps","letterColor","parseInt","toString","style","color","DragSource","beginDrag","endDrag","removeGap","dragSource","isDragging","DropTarget","dropTarget","isOverCurrent","isOver","shallow","Characters","removeAllGaps","item","isOverNothing","boxType","characterArr","containers_Character","boxTarget","Box","boxColor","boxBorderColor","backgroundColor","border","characters_Characters","LetterBox","containers_Box","OperandBox","operands","droppable","SolutionBox","Boxes","boxes_LetterBox","boxes_OperandBox","boxes_SolutionBox","Button","buttonText","toUpperCase","click","Modal","e","stopPropagation","nativeEvent","stopImmediatePropagation","show","stopClose","children","CorrectSolution","goHome","IncorrectSolution","incorrectReason","constructSubtitle","close","Buttons","buttons_Button","modal_content_Modal","correctSubmittedAnswer","incorrectSubmittedAnswer","modal_content_CorrectSolution","modal_content_IncorrectSolution","Background","bgColor","Game","containers_Header","containers_Background","boxes_Boxes","containers_Buttons","Home","setPageGame","setPageInstructions","setPageSettings","Instructions","ColorPicker","updateRedVal","updateBlueVal","updateGreenVal","red","green","blue","rgbArray","updateColor","event","target","step","min","max","onChange","ColorDisplay","Settings","updateBackgroundColor","updateBoxColor","updateLetterColor","updateBoxBorderColor","bgRed","bgGreen","bgBlue","boxRed","boxGreen","boxBlue","letterRed","letterGreen","letterBlue","boxBorderRed","boxBorderGreen","boxBorderBlue","settings_ColorPicker","settings_ColorDisplay","PageController","showHome","home_Home","showGame","game_Game","showInstructions","instructions_Instructions","showSettings","containers_Settings","AppController","containers_PageController","Boolean","window","location","hostname","match","store","createStore","reducer","ReactDOM","render","es","lib","backend","HTML5Backend","routes","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","randomWords","makeHash","text","possible","charAt","Math","floor","random","makeCharArr","initialState","exactly","maxLength","answerSubmitted","quassinoballyApp","arguments","undefined","action","newChar","_Users_adlai_Documents_code_web_nineteen_quassinobally_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","_Users_adlai_Documents_code_web_nineteen_quassinobally_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","slice","charHash","removeIndex","module","exports","p"],"mappings":"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","file":"static/js/main.3ad5551d.chunk.js","sourcesContent":["export const ADD_CHAR = 'ADD_CHAR'\nexport const REMOVE_CHAR = 'REMOVE_CHAR'\nexport const SUBMIT_ANS = 'SUBMIT_ANS'\nexport const TOGGLE_GAPS = 'TOGGLE_GAPS'\nexport const NEW_PUZZLE = 'NEW_PUZZLE'\nexport const SET_PAGE = 'SET_PAGE'\nexport const SET_BG_COLOR = 'SET_BG_COLOR'\nexport const SET_BOX_COLOR = 'SET_BOX_COLOR'\nexport const SET_LETTER_COLOR = 'SET_LETTER_COLOR'\nexport const SET_BOXBORDER_COLOR = 'SET_BOXBORDER_COLOR'\n\nexport function addChar(char, index, box) {\n  return{\n    type: ADD_CHAR,\n    char,\n    index,\n    box\n  }\n}\n\nexport function removeChar(char, index, box) {\n  return {\n    type: REMOVE_CHAR,\n    char,\n    index,\n    box\n  }\n}\n\nexport function submitAns(isCorrectSolution) {\n  return {\n    type: SUBMIT_ANS,\n    isCorrectSolution\n  }\n}\n\nexport function toggleGaps() {\n  return {\n    type: TOGGLE_GAPS\n  }\n}\n","import { createStore } from 'redux'\nimport reducer from '../../reducers'\nimport { addChar, removeChar, submitAns } from  '../../actions'\n\nexport function newPuzzle(dispatch) {\n  dispatch({\n    type: 'NEW_PUZZLE'\n  })\n}\n\nfunction checkSolutionValidity(solutionCharArr) {\n  let parenthesesArr = [];\n  let nonParenthesesArr = [];\n  let shitIsWrong = false;\n  for(let i = 0; i < solutionCharArr.length; i ++) {\n    let char = solutionCharArr[i].value;\n    let type = solutionCharArr[i].type;\n    if(char === \"(\" ) {\n      parenthesesArr.push(char);\n    }\n    else if(char === \")\") {\n      if(parenthesesArr.length > 0) {\n        parenthesesArr.pop();\n      }\n      else {\n        shitIsWrong = true;\n      }\n    }\n    else {\n      nonParenthesesArr.push(type);\n    }\n  }\n  if(nonParenthesesArr[nonParenthesesArr.length - 1] === \"operand\") {\n    return false;\n  }\n  if(shitIsWrong === true) {\n    return false;\n  }\n\n  if(parenthesesArr.length > 0) {\n    return false;\n  }\n  else {\n    let shitIsWrongTwo = false;\n    for(let j = 0; j < nonParenthesesArr.length; j ++) {\n      if( j % 2 === 0) {\n        if(nonParenthesesArr[j] !== \"letter\") {\n          shitIsWrongTwo = true;\n        }\n      }\n      else if( j % 2 === 1) {\n        if(nonParenthesesArr[j] !== \"operand\") {\n          shitIsWrongTwo = true;\n        }\n      }\n    }\n    return !shitIsWrongTwo;\n  }\n\n}\n\nfunction evaluateSolutionArr(charArr) {\n  var alphabet = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"];\n  let solutionExpression = \"\";\n  for(let i = 0; i < charArr.length; i ++) {\n    let valToAdd = \"\";\n    if(alphabet.includes(charArr[i].value)) {\n      valToAdd = alphabet.indexOf(charArr[i].value)+1;\n    }\n    else {\n      valToAdd = charArr[i].value\n    }\n\n    solutionExpression += valToAdd\n  }\n\n  String.prototype.replaceAll = function(search, replacement) {\n    var target = this;\n    return target.replace(new RegExp(search, 'g'), replacement);\n  };\n\n  solutionExpression = solutionExpression.replaceAll(\"×\", \"*\")\n  solutionExpression = solutionExpression.replaceAll(\"÷\", \"/\")\n  console.log(solutionExpression);\n  let solutionEvaluation = eval(solutionExpression);\n  return solutionEvaluation;\n}\n\nexport function submitAnswer(props) {\n  let dispatch = props.dispatch;\n\n  let validity = checkSolutionValidity(props.solutionCharArr);\n  if(validity === true) {\n    let answerEvaluation = evaluateSolutionArr(props.solutionCharArr)\n    if(props.letterCharArr.length > 0) {\n      alert(\"must use all characters\");\n      return;\n    }\n    if(answerEvaluation % 27 === 0) {\n      console.log(\"correct solution\")\n      dispatch({\n        type: 'SUBMIT_ANS',\n        isCorrectSolution: true\n\n      })\n      return;\n    }\n    else {\n      console.log(\"incorrect solution\")\n      dispatch({\n        type: 'SUBMIT_ANS',\n        isCorrectSolution: false\n\n      })\n      return;\n    }\n  }\n  else {\n    alert(\"solution is not valid\")\n    return;\n  }\n\n}\n\nexport function canMoveChar(char, toBox) {\n  if(char.value.type === \"letter\") {\n    if(toBox.type === \"operand\") {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else if(char.value.type === \"operand\") {\n    if(toBox.type === \"letter\") {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n  else {\n    console.log(char.type)\n  }\n}\n\nexport function moveChar(char, index, fromBox, toBox, dispatch) {\n  // console.log(index)\n  if(char.type === \"letter\") {\n    letterMove(char, index, fromBox, toBox, dispatch);\n  }\n  else if(char.type === \"operand\") {\n    operandMove(char, index, fromBox, toBox, dispatch);\n  }\n}\n\nfunction letterMove(char, index, fromBox, toBox, dispatch) {\n  dispatch({\n    type: 'ADD_CHAR',\n    char: char,\n    index: index,\n    box: toBox\n  });\n  dispatch({\n    type: 'REMOVE_CHAR',\n    char: char,\n    index: index,\n    box: fromBox\n  });\n}\n\nfunction operandMove(char, index, fromBox, toBox, dispatch) {\n  if(toBox.type === \"operand\") {\n    dispatch({\n      type: 'REMOVE_CHAR',\n      char: char,\n      index: index,\n      box: fromBox\n    });\n  }\n  else if(toBox.type === \"solution\" && fromBox.type === \"operand\") {\n    dispatch({\n      type: 'ADD_CHAR',\n      char: char,\n      index: index,\n      box: toBox\n    });\n  }\n  else if(toBox.type === \"solution\" && fromBox.type === \"solution\") {\n    dispatch({\n      type: 'ADD_CHAR',\n      char: char,\n      index: index,\n      box: toBox\n    });\n    dispatch({\n      type: 'REMOVE_CHAR',\n      char: char,\n      index: index,\n      box: fromBox\n    });\n  }\n}\n","export default function arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length != b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n\nexport function getIndexOfHash(hash, array) {\n  let returnVal = null;\n  for(let i = 0; i < array.length; i ++) {\n    if(hash === array[i].identifier) {\n      return i;\n    }\n  }\n  // console.log(returnVal);\n  console.log(\"not found in index\")\n  return returnVal;\n}\n\nexport function getToBoxArr(toBox) {\n  if(toBox.type === \"letter\") {\n    return toBox.letterCharArr;\n  }\n  else if(toBox.type === \"operand\") {\n    return toBox.operandCharArr;\n  }\n  else if(toBox.type === \"solution\") {\n    return toBox.solutionCharArr;\n  }\n}\n\nexport function lengthOfToBox(toBox) {\n  if(toBox.type === \"letter\") {\n    return toBox.letterCharArr.length;\n  }\n  else if(toBox.type === \"operand\") {\n    return toBox.operandCharArr.length;\n  }\n  else if(toBox.type === \"solution\") {\n    return toBox.solutionCharArr.length;\n  }\n}\n","export function setPage(page, dispatch) {\n  dispatch({\n    type: 'SET_PAGE',\n    page: page\n  })\n}\n\nexport function setBackgroundColor(color, dispatch) {\n  dispatch({\n    type: 'SET_BG_COLOR',\n    color: color\n  })\n}\n\nexport function setBoxColor(color, dispatch) {\n  dispatch({\n    type: 'SET_BOX_COLOR',\n    color: color\n  })\n}\n\nexport function setLetterColor(color, dispatch) {\n  dispatch({\n    type: 'SET_LETTER_COLOR',\n    color: color\n  })\n}\n\nexport function setBoxBorderColor(color, dispatch) {\n  dispatch({\n    type: 'SET_BOXBORDER_COLOR',\n    color: color\n  })\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as appLaws from '../components/game/AppLaws';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.setPageHome = this.setPageHome.bind(this);\n  }\n\n  setPageHome() {\n    appLaws.setPage('home', this.props.dispatch)\n  }\n\n  render() {\n    return(\n      <div className=\"header\">\n        <div className=\"header-back-button\" onClick={this.setPageHome}>\n          <img src={require('../assets/svg/back.svg')} />\n          <div className=\"header-back-button-text\">Home</div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport { findDOMNode } from 'react-dom';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport * as functions from '../functions';\nimport * as gameLaws from '../components/game/GameLaws';\n\n\nfunction collectDrag(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging()\n  }\n}\n\nfunction collectDrop(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOverCurrent: monitor.isOver({shallow: true})\n  }\n}\n\nconst charSourceDrag = {\n  beginDrag(props) {\n    let dispatch = props.dispatch;\n    dispatch({\n      type: 'TOGGLE_GAPS'\n    })\n    return {props};\n  },\n  endDrag(props) {\n    let dispatch = props.dispatch;\n    dispatch({\n      type: 'TOGGLE_GAPS'\n    })\n    props.removeGap();\n    return{props};\n  }\n};\n\nconst charSourceDrop = {\n  hover(props, monitor, component) {\n    let c = component.getDecoratedComponentInstance()\n    props.isCurrentlyOver(props.value.identifier)\n  },\n  drop(props, monitor, component) {\n    props.isCurrentlyOver('')\n    const hoverBoundingRect = (findDOMNode(\n\t\t\tcomponent,\n\t\t)).getBoundingClientRect();\n\n    let leftX = hoverBoundingRect.left;\n    let rightX = hoverBoundingRect.right;\n    let middleX = (leftX + rightX)/2;\n    let mouseX = monitor.getClientOffset().x;\n\n    let addToIndex = 0;\n    if(mouseX > middleX) {\n      addToIndex = 1;\n    }\n    // console.log(addToIndex)\n\n    let dispatch = props.dispatch;\n    let char = monitor.getItem().props.value;\n    let dropOnHash = props.currentlyOver;\n    let fromBox = monitor.getItem().props.currentBox;\n    let toBox = props.currentBox;\n    let toBoxArr = functions.getToBoxArr(toBox);\n    let dropIndex = functions.getIndexOfHash(dropOnHash, toBoxArr) + addToIndex;\n\n\n    if(gameLaws.canMoveChar(props, toBox)) {\n      gameLaws.moveChar(char, dropIndex, fromBox, toBox, dispatch);\n    }\n    else {\n      console.log(\"cant move\")\n    }\n  }\n};\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nexport class Character extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      type: props.value.type,\n      value: props.value.value,\n      identifier: props.value.identifier,\n      pushLeft: false,\n      pushRight: false\n    }\n    this.hoverLeft = this.hoverLeft.bind(this);\n    this.hoverRight = this.hoverRight.bind(this);\n  }\n\n  hoverLeft() {\n    this.setState({\n      pushLeft: true,\n      pushRight: false\n    })\n  }\n\n  hoverRight() {\n    this.setState({\n      pushLeft: false,\n      pushRight: true\n    })\n  }\n\n  render(){\n    let currentlyOver = this.props.currentlyOver;\n    let identifier = this.props.value.identifier;\n    const { connectDropTarget, connectDragSource } = this.props;\n    let pushLeft = (currentlyOver === identifier && !this.props.noGaps) ? \"push-left\" : \"\"\n\n    let red = (parseInt(255 - this.props.letterColor[0])).toString()\n    let green = (parseInt(255 - this.props.letterColor[1])).toString()\n    let blue = (parseInt(255 - this.props.letterColor[2])).toString()\n    let letterColor = \"rgb(\" + red + \", \" + green + \",\" + blue + \")\"\n\n    return connectDragSource(connectDropTarget(\n      <div className={\"character \" + this.props.value.type + \"-character \" + pushLeft} style={{color: letterColor}}>\n        {this.props.value.value}\n      </div>\n    ))\n  }\n}\n\n\n\nCharacter = DragSource('character', charSourceDrag, collectDrag)(Character);\nCharacter = DropTarget('character', charSourceDrop, collectDrop)(Character);\nexport default connect(mapStateToProps)(Character);\n","import React from 'react';\nimport Character from '../../../containers/Character'\n\n\nclass Characters extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentlyOver: ''\n    }\n    this.isCurrentlyOver = this.isCurrentlyOver.bind(this);\n    this.removeGap = this.removeGap.bind(this);\n    this.removeAllGaps = this.removeAllGaps.bind(this);\n  }\n\n  removeAllGaps() {\n    console.log(\"remove all gaps\");\n  }\n\n  isCurrentlyOver(item) {\n    if(!this.props.isOverNothing) {\n      this.setState({\n        currentlyOver: item\n      })\n    }\n  }\n\n  removeGap() {\n    this.setState({\n      currentlyOver: ''\n    })\n  }\n\n  render() {\n    // this is wild inefficient but it works will clean up later in\n    // getting this logic out of the render function\n    let boxType = this.props.boxType;\n    let value = [];\n    if(boxType === \"letter\") {\n      value = this.props.letterCharArr;\n    }\n    else if(boxType === \"operand\") {\n      value = this.props.operandCharArr;\n    }\n    else if(boxType === \"solution\") {\n      value = this.props.solutionCharArr;\n    }\n    let operandValuesArr = [\"+\",\"-\",\"×\",\"÷\",\"(\",\")\"];\n    let characterArr = []\n    for(var i = 0; i < value.length; i ++) {\n      characterArr.push(\n        <Character key={i}\n                   value={value[i]}\n                   currentBox={this.props.currentBox}\n                   isCurrentlyOver={this.isCurrentlyOver}\n                   currentlyOver={this.state.currentlyOver}\n                   removeGap={this.removeGap}\n                   />\n      )\n    }\n\n    return(\n      <div className=\"characters\">\n        {characterArr}\n      </div>\n    )\n  }\n}\n\nexport default Characters;\n","import React from 'react';\nimport Characters from '../components/boxes/characters/Characters';\nimport { DropTarget } from 'react-dnd';\nimport { findDOMNode } from 'react-dom';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport {arrayIsEqual, lengthOfToBox} from '../functions/index.js';\nimport * as gameLaws from '../components/game/GameLaws';\n\nconst boxTarget = {\n  hover(props, monitor, component) {\n  },\n  drop(props, monitor, component) {\n    //returns false if dropped in character\n    // this.isOverNothing();\n    // console.log(component);\n    // component.removeHover()\n    let exclusivelyDropped = monitor.isOver({ shallow: true });\n    if(exclusivelyDropped) {\n      let char = monitor.getItem().props;\n      let fromBox = char.currentBox;\n      let index = char.value.index;\n      let toBox = component.props;\n      let dispatch = props.dispatch;\n\n      const hoverBoundingRect = (findDOMNode(\n  \t\t\tcomponent,\n  \t\t)).getBoundingClientRect();\n\n      let leftX = hoverBoundingRect.left;\n      let rightX = hoverBoundingRect.right;\n      let middleX = (leftX + rightX)/2;\n      let mouseX = monitor.getClientOffset().x;\n\n      let dropIndex = 0;\n      if(mouseX > middleX) {\n        dropIndex = lengthOfToBox(toBox);\n      }\n\n      if(gameLaws.canMoveChar(char, toBox)) {\n        gameLaws.moveChar(char.value, dropIndex, fromBox, toBox, dispatch);\n      }\n      else {\n        console.log(\"cant move\")\n      }\n    }\n  }\n}\n\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver({shallow: true})\n  }\n}\n\nclass Box extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let boxRed = (parseInt(255 - this.props.boxColor[0])).toString()\n    let boxGreen = (parseInt(255 - this.props.boxColor[1])).toString()\n    let boxBlue = (parseInt(255 - this.props.boxColor[2])).toString()\n    let boxColor = \"rgb(\" + boxRed + \", \" + boxGreen + \",\" + boxBlue + \")\"\n\n    let boxBorderRed = (parseInt(255 - this.props.boxBorderColor[0])).toString()\n    let boxBorderGreen = (parseInt(255 - this.props.boxBorderColor[1])).toString()\n    let boxBorderBlue = (parseInt(255 - this.props.boxBorderColor[2])).toString()\n    let boxBorderColor = \"2px solid rgb(\" + boxBorderRed + \", \" + boxBorderGreen + \",\" + boxBorderBlue + \")\"\n\n    const { connectDropTarget } = this.props;\n\n    return connectDropTarget(\n      <div className=\"box\" style={{backgroundColor: boxColor, border: boxBorderColor}}>\n        <Characters\n          boxType={this.props.type}\n          letterCharArr={this.props.letterCharArr}\n          operandCharArr={this.props.operandCharArr}\n          solutionCharArr={this.props.solutionCharArr}\n          currentBox={this.props}\n        />\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nBox = DropTarget('character', boxTarget, collect)(Box);\nexport default connect(mapStateToProps)(Box);\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass LetterBox extends Box {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return(\n      <Box type=\"letter\" />\n    );\n  }\n}\nexport default LetterBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass OperandBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      operands: \"+-×÷\",\n      droppable: [\"operand\"]\n    }\n  }\n  render() {\n    return(\n      <Box type=\"operand\" value={this.state.operands} />\n    );\n  }\n}\nexport default OperandBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\n\nclass SolutionBox extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      droppable: [\"operand\", \"letter\"]\n    }\n  }\n  render() {\n    return(\n      <Box type=\"solution\" value=\"\"/>\n    );\n  }\n}\nexport default SolutionBox;\n","import React from 'react';\n// import Box from './Box';\nimport Box from '../../containers/Box';\nimport LetterBox from './LetterBox';\nimport OperandBox from './OperandBox';\nimport SolutionBox from './SolutionBox';\n\nclass Boxes extends React.Component {\n  render() {\n    return(\n      <div className=\"boxes\">\n        <LetterBox />\n        <OperandBox />\n        <SolutionBox />\n      </div>\n    );\n  }\n}\nexport default Boxes;\n","import React from 'react';\n\nimport { connect } from 'react-redux';\n\n// import * as gameLaws from '../components/game/GameLaws';\nimport * as gameLaws from '../game/GameLaws';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    let buttonText = this.props.type\n      .replace(/-/g, ' ')\n      .replace(/^./, function(x){return x.toUpperCase()})\n\n    this.state = {\n      type: buttonText\n    }\n    this.click = this.click.bind(this);\n  }\n\n  click() {\n    if(this.state.type === \"New word\") {\n      // console.log(this.props.dispatch);\n      gameLaws.newPuzzle(this.props.dispatch)\n    }\n    if(this.state.type === \"Submit\") {\n      // console.log(this.props)\n      gameLaws.submitAnswer(this.props);\n    }\n  }\n\n  render() {\n    return(\n      <div className={\"button \" + this.state.type} onClick={this.click}>\n        {this.state.type}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Button);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nclass Modal extends React.Component {\n  stopClose(e) {\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n  }\n\n  render() {\n    if(!this.props.show) {\n      return null;\n    }\n    return (\n      <div className=\"modal-backdrop\">\n        <div className={\"modal\"} onClick={(e) => this.stopClose(e)}>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(mapStateToProps)(Modal);\n","import React from 'react';\n// import * as actions from '../../actions';\nimport * as gameLaws from '../game/GameLaws';\nimport * as appLaws from '../game/AppLaws';\n\nclass CorrectSolution extends React.Component {\n  constructor() {\n    super();\n    this.newPuzzle = this.newPuzzle.bind(this);\n    this.goHome = this.goHome.bind(this);\n  }\n  newPuzzle() {\n    gameLaws.newPuzzle(this.props.dispatch);\n  }\n  goHome() {\n    appLaws.setPage('home', this.props.dispatch);\n    gameLaws.newPuzzle(this.props.dispatch);\n  }\n  render() {\n    if(this.props.show) {\n      return(\n        <div className=\"modal-content\">\n          <div className=\"modal-title-section\">\n            <div className=\"modal-title\">\n              Correct solution!\n            </div>\n            <div className=\"modal-subtitle\">\n              You solved the puzzle in x seconds!\n            </div>\n          </div>\n          <div className=\"correct-buttons\">\n            <div className=\"button next-puzzle\" onClick={this.newPuzzle}>\n              Another Puzzle\n            </div>\n            <div className=\"button back-home\" onClick={this.goHome}>\n              Home\n            </div>\n          </div>\n        </div>\n      )\n    }\n    else {\n      return null;\n    }\n\n  }\n}\n\nexport default CorrectSolution;\n","import React from 'react';\n\nclass IncorrectSolution extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incorrectReason: props.incorrectReason\n    }\n    this.constructSubtitle = this.constructSubtitle.bind(this);\n  }\n  constructSubtitle() {\n    let incorrectReason = this.state.incorrectReason\n    if(incorrectReason === \"invalid\") {\n      return \"There is a problem with your solution. Make sure you include an operand in between each letter and have used any parentheses correctly.\"\n    }\n    else if(incorrectReason === \"computation\") {\n      return \"There was a problem with the computation.\"\n    }\n  }\n  render() {\n    if(this.props.show) {\n      return(\n          <div className=\"modal-content\">\n            <div className=\"modal-title-section\">\n              <div className=\"modal-title\">\n                Incorrect Solution.\n              </div>\n              <div className=\"modal-subtitle\">\n                {this.constructSubtitle}\n              </div>\n            </div>\n            <div className=\"correct-buttons\">\n              <div className=\"button close\" onClick={this.props.close}>\n                Close\n              </div>\n              <div className=\"button back-home\">\n                Home\n              </div>\n            </div>\n          </div>\n        )\n    }\n    else {\n      return null;\n    }\n  }\n}\n\nexport default IncorrectSolution;\n","import React from 'react';\nimport Button from '../components/buttons/Button';\n// import Button from './Button';\nimport Modal from '../components/modal-content/Modal';\nimport CorrectSolution from '../components/modal-content/CorrectSolution';\nimport IncorrectSolution from '../components/modal-content/IncorrectSolution';\n\nimport { connect } from 'react-redux';\n\nimport * as actions from '../actions';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Buttons extends React.Component {\n  render() {\n    let dispatch = this.props.dispatch;\n    return(\n      <div className=\"buttons\">\n        <Button type=\"new-word\" />\n        <Button dispatch={dispatch} type=\"submit\" />\n        <Button type=\"three\" />\n        <Modal show={this.props.correctSubmittedAnswer || this.props.incorrectSubmittedAnswer}>\n          <CorrectSolution dispatch={dispatch} show={this.props.correctSubmittedAnswer} />\n          <IncorrectSolution show={this.props.incorrectSubmittedAnswer} />\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Buttons);\n","import React from 'react'\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Background extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      backgroundColor: ''\n    }\n    this.backgroundColor = this.backgroundColor.bind(this);\n  }\n\n  backgroundColor() {\n    // return \"blue\"\n    this.setState({\n      backgroundColor: \"blue\"\n    })\n  }\n\n  render() {\n    let red = (parseInt(255 - this.props.backgroundColor[0])).toString()\n    let green = (parseInt(255 - this.props.backgroundColor[1])).toString()\n    let blue = (parseInt(255 - this.props.backgroundColor[2])).toString()\n    let bgColor = \"rgb(\" + red + \", \" + green + \",\" + blue + \")\"\n    return(\n      <div className=\"background\" style={{backgroundColor:  bgColor}}>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Background);\n","import React from 'react';\nimport Header from '../../containers/Header';\nimport Boxes from '../boxes/Boxes';\nimport Buttons from '../../containers/Buttons';\nimport Background from '../../containers/Background';\n\n\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n\n  }\n  render() {\n    return (\n      <div className=\"game-root\">\n        <Header />\n        <Background />\n        <Boxes />\n        <Buttons />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react'\nimport Background from '../../containers/Background';\nimport * as appLaws from '../game/AppLaws';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.setPageGame = this.setPageGame.bind(this)\n    this.setPageInstructions = this.setPageInstructions.bind(this)\n    this.setPageSettings = this.setPageSettings.bind(this)\n  }\n  setPageGame() {\n    appLaws.setPage('game', this.props.dispatch)\n  }\n  setPageInstructions() {\n    appLaws.setPage('instructions', this.props.dispatch)\n  }\n  setPageSettings() {\n    appLaws.setPage('settings', this.props.dispatch)\n  }\n  render() {\n    return(\n      <div className=\"page home-page\">\n        <Background />\n        <div className=\"home-page-title\">\n          Quassinobally\n        </div>\n        <div className=\"home-page-buttons\">\n          <div className=\"button play-button\" onClick={this.setPageGame}>\n            Play\n          </div>\n          <div className=\"button instructions-button\" onClick={this.setPageInstructions}>\n            Instructions\n          </div>\n          <div className=\"button settings-button\" onClick={this.setPageSettings}>\n            Settings\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react'\nimport Header from '../../containers/Header';\nimport Background from '../../containers/Background'\n\nclass Instructions extends React.Component {\n  render() {\n    return(\n      <div className=\"page instructions-page\">\n        <Header />\n        <Background />\n\n      </div>\n    )\n  }\n}\n\nexport default Instructions;\n","import React from 'react';\n\nclass ColorPicker extends React.Component {\n  constructor() {\n    super();\n    this.updateRedVal = this.updateRedVal.bind(this);\n    this.updateBlueVal = this.updateBlueVal.bind(this);\n    this.updateGreenVal = this.updateGreenVal.bind(this);\n  }\n\n  updateColor(red, green, blue) {\n    let rgbArray = [red, green, blue]\n    this.props.updateColor(rgbArray)\n  }\n\n  updateRedVal(event) {\n    // console.log(\"update rede val\")\n    let red = event.target.value;\n    let green = this.props.green;\n    let blue = this.props.blue;\n    this.updateColor(red, green, blue)\n  }\n\n  updateGreenVal(event) {\n    let red = this.props.red;\n    let green = event.target.value;\n    let blue = this.props.blue;\n    this.updateColor(red, green, blue)\n  }\n\n  updateBlueVal(event) {\n    let red = this.props.red;\n    let green = this.props.green;\n    let blue = event.target.value;\n    this.updateColor(red, green, blue)\n  }\n\n\n\n  render() {\n    return(\n      <div className=\"color-picker\">\n        <input type=\"range\" className=\"color-selector\" step=\"1\" min=\"0\" max=\"255\" value={this.props.red} onChange={this.updateRedVal} />\n        <input type=\"range\" className=\"color-selector\" step=\"1\" min=\"0\" max=\"255\" value={this.props.green} onChange={this.updateGreenVal} />\n        <input type=\"range\" className=\"color-selector\" step=\"1\" min=\"0\" max=\"255\" value={this.props.blue} onChange={this.updateBlueVal} />\n      </div>\n    )\n  }\n}\n\nexport default ColorPicker;\n","import React from 'react';\n\nclass ColorDisplay extends React.Component {\n  constructor() {\n    super();\n\n  }\n  render() {\n    let red = (parseInt(255 - this.props.red)).toString()\n    let green = (parseInt(255 - this.props.green)).toString()\n    let blue = (parseInt(255 - this.props.blue)).toString()\n    let boxColor = \"rgb(\" + red + \", \" + green + \",\" + blue + \")\"\n    return (\n      <div className=\"color-display\" style={{backgroundColor: boxColor}}>\n        <div style={{color: boxColor}}>nut</div>\n      </div>\n    )\n  }\n}\n\nexport default ColorDisplay;\n","import React from 'react'\nimport Header from './Header';\nimport ColorPicker from '../components/settings/ColorPicker'\nimport ColorDisplay from '../components/settings/ColorDisplay'\nimport Background from './Background'\n\nimport { connect } from 'react-redux';\n\nimport * as appLaws from '../components/game/AppLaws';\n\nfunction mapStateToProps(state, ownProps) {\n  return state;\n}\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n\n    this.updateBackgroundColor = this.updateBackgroundColor.bind(this);\n    this.updateBoxColor = this.updateBoxColor.bind(this);\n    this.updateLetterColor = this.updateLetterColor.bind(this);\n    this.updateBoxBorderColor = this.updateBoxBorderColor.bind(this);\n  }\n\n  updateBackgroundColor(color) {\n    appLaws.setBackgroundColor(color, this.props.dispatch)\n  }\n\n  updateBoxColor(color) {\n    appLaws.setBoxColor(color, this.props.dispatch)\n  }\n\n  updateLetterColor(color) {\n    appLaws.setLetterColor(color, this.props.dispatch)\n  }\n\n  updateBoxBorderColor(color) {\n    appLaws.setBoxBorderColor(color, this.props.dispatch)\n  }\n\n  render() {\n    let bgRed = this.props.backgroundColor[0];\n    let bgGreen = this.props.backgroundColor[1];\n    let bgBlue = this.props.backgroundColor[2];\n\n    let boxRed = this.props.boxColor[0];\n    let boxGreen = this.props.boxColor[1];\n    let boxBlue = this.props.boxColor[2];\n\n    let letterRed = this.props.letterColor[0];\n    let letterGreen = this.props.letterColor[1];\n    let letterBlue = this.props.letterColor[2];\n\n    let boxBorderRed = this.props.boxBorderColor[0];\n    let boxBorderGreen = this.props.boxBorderColor[1];\n    let boxBorderBlue = this.props.boxBorderColor[2];\n    return(\n      <div className=\"page settings-page\">\n        <Header />\n        <Background />\n        <div className=\"settings-modifier\">\n          <div className=\"background-color\">\n            Background Color\n          </div>\n          <ColorPicker red={bgRed} green={bgGreen} blue={bgBlue} updateColor={this.updateBackgroundColor}/>\n          <div className=\"box-color\">\n            Box Color\n          </div>\n          <ColorPicker red={boxRed} green={boxGreen} blue={boxBlue} updateColor={this.updateBoxColor}/>\n          <ColorDisplay red={boxRed} green={boxGreen} blue={boxBlue}/>\n          <div className=\"letter-color\">\n            Letter color\n          </div>\n          <ColorPicker red={letterRed} green={letterGreen} blue={letterBlue} updateColor={this.updateLetterColor} />\n          <ColorDisplay red={letterRed} green={letterGreen} blue={letterBlue}/>\n          <div className=\"letter-color\">\n            Box Border Color\n          </div>\n          <ColorPicker red={boxBorderRed} green={boxBorderGreen} blue={boxBorderBlue} updateColor={this.updateBoxBorderColor} />\n          <ColorDisplay red={boxBorderRed} green={boxBorderGreen} blue={boxBorderBlue}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Home from '../components/home/Home';\nimport Game from '../components/game/Game';\nimport Instructions from '../components/instructions/Instructions';\n// import Settings from '../components/settings/Settings';\nimport Settings from '../containers/Settings';\n\nconst mapStateToProps = state => {\n  return state;\n}\n\nclass PageController extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    if(this.props.showHome) {\n      return(\n        <Home dispatch={this.props.dispatch}/>\n      )\n    }\n    else if(this.props.showGame) {\n      return(\n        <Game dispatch={this.props.dispatch}/>\n      )\n    }\n    else if(this.props.showInstructions) {\n      return(\n        <Instructions dispatch={this.props.dispatch}/>\n      )\n    }\n    else if(this.props.showSettings) {\n      return (\n        <Settings />\n      )\n    }\n    else {\n      return <div>you fuckdedup</div>\n    }\n\n  }\n}\n\nexport default connect(mapStateToProps)(PageController);\n","import React from 'react';\nimport {BrowserRouter, Route, Switch, Link} from 'react-router-dom';\nimport Game from '../components/game/Game.js';\nimport PageController from '../containers/PageController';\n\nclass AppController extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return(\n      <PageController />\n    )\n  }\n}\n\nexport default AppController;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux'\n\nimport './index.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport { addChar, removeChar, submitAns } from './actions'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport Routes from './routes';\n// import AppController from './containers/AppController';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport { DragDropContextProvider } from 'react-dnd';\n\n\nexport default() => <DragDropContextProvider backend={HTML5Backend}><Routes /></DragDropContextProvider>;\n","import {\n  ADD_CHAR, REMOVE_CHAR, SUBMIT_ANS, TOGGLE_GAPS, NEW_PUZZLE,\n  SET_PAGE, SET_BG_COLOR, SET_BOX_COLOR, SET_LETTER_COLOR,\n  SET_BOXBORDER_COLOR\n} from '../actions'\nimport {getCompositeCharArr, getIndexOfHash} from '../functions';\n\nvar randomWords = require('random-words');\n\nfunction randomWord() {\n  let words = [\"hat\", \"man\", \"has\"]\n  return words[Math.floor(Math.random() * words.length)];\n}\n\nfunction makeHash() {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < 15; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\nfunction makeCharArr(value, type) {\n  let charArr = [];\n  for(var  i = 0; i < value.length; i ++) {\n    charArr.push({\n      type: type,\n      value: value[i],\n      identifier: makeHash()\n    })\n  }\n  return charArr\n}\n\nlet operands = \"+-×÷()\";\n\n// use in prod\nlet randWord = randomWords({exactly:1, maxLength: 10})[0];\n\n// use in dev\n// let randWord = randomWord();\n\nconst initialState = {\n  letterCharArr: makeCharArr(randWord, 'letter'),\n  operandCharArr: makeCharArr(operands, 'operand'),\n  solutionCharArr: [],\n  noGaps: true,\n  answerSubmitted: false,\n  correctSubmittedAnswer: false,\n  incorrectSubmittedAnswer: false,\n  showHome: true,\n  showGame: false,\n  showInstructions: false,\n  showSettings: false,\n  backgroundColor: [0,128,256],\n  boxColor: [0, 255, 255],\n  letterColor: [0, 0, 255],\n  boxBorderColor: [0, 0, 255]\n}\n\nfunction quassinoballyApp(state = initialState, action) {\n  switch (action.type) {\n    case ADD_CHAR:\n      let newChar = {\n        type: action.char.type,\n        value: action.char.value,\n        identifier: makeHash()\n      }\n      if(action.box.type === \"letter\") {\n        return {\n          ...state,\n          letterCharArr: [\n            ...state.letterCharArr.slice(0, action.index),\n            newChar,\n            ...state.letterCharArr.slice(action.index)\n          ]\n        }\n      }\n      else if(action.box.type === \"operand\") {\n        return {\n          ...state,\n          operandCharArr: [\n            ...state.operandCharArr.slice(0, action.index),\n            newChar,\n            ...state.operandCharArr.slice(action.index)\n          ]\n        }\n      }\n      else if(action.box.type === \"solution\") {\n        return {\n          ...state,\n          solutionCharArr: [\n            ...state.solutionCharArr.slice(0, action.index),\n            newChar,\n            ...state.solutionCharArr.slice(action.index)\n          ]\n        }\n      }\n      else {\n      }\n    case REMOVE_CHAR:\n      let charHash = action.char.identifier;\n      if(action.box.type === \"letter\") {\n        let removeIndex = getIndexOfHash(charHash, state.letterCharArr);\n        return {\n          ...state,\n          letterCharArr: [\n            ...state.letterCharArr.slice(0, removeIndex),\n            ...state.letterCharArr.slice(removeIndex + 1, )\n          ]\n        }\n        return state;\n      }\n      else if(action.box.type === \"solution\") {\n        let removeIndex = getIndexOfHash(charHash, state.solutionCharArr);\n        return {\n          ...state,\n          solutionCharArr: [\n            ...state.solutionCharArr.slice(0, removeIndex),\n            ...state.solutionCharArr.slice(removeIndex + 1, )\n          ]\n        }\n        return state;\n      }\n      else {\n        console.log(action.box.type)\n      }\n      return state;\n    case SUBMIT_ANS:\n      return {\n        ...state,\n        correctSubmittedAnswer: !state.correctSubmittedAnswer\n      }\n    case TOGGLE_GAPS:\n      return {\n        ...state,\n        noGaps: !state.noGaps\n      }\n    case NEW_PUZZLE:\n      return {\n        ...state,\n        letterCharArr: makeCharArr(randomWords({exactly:1, maxLength: 10})[0], 'letter'),\n        operandCharArr: makeCharArr(operands, 'operand'),\n        solutionCharArr: [],\n        noGaps: true,\n        answerSubmitted: false,\n        correctSubmittedAnswer: false,\n        incorrectSubmittedAnswer: false\n      }\n    case SET_PAGE:\n      if(action.page === \"home\") {\n        return {\n          ...state,\n          showHome: true,\n          showGame: false,\n          showInstructions: false,\n          showSettings: false\n        }\n      }\n      else if(action.page === \"game\") {\n        return {\n          ...state,\n          showHome: false,\n          showGame: true,\n          showInstructions: false,\n          showSettings: false\n        }\n      }\n      else if(action.page === \"instructions\") {\n        return {\n          ...state,\n          showHome: false,\n          showGame: false,\n          showInstructions: true,\n          showSettings: false\n        }\n      }\n      else if(action.page === \"settings\") {\n        return {\n          ...state,\n          showHome: false,\n          showGame: false,\n          showInstructions: false,\n          showSettings: true\n        }\n      }\n    case SET_BG_COLOR:\n      return {\n        ...state,\n        backgroundColor: action.color\n      }\n    case SET_BOX_COLOR:\n      return {\n        ...state,\n        boxColor: action.color\n      }\n    case SET_LETTER_COLOR:\n      return {\n        ...state,\n        letterColor: action.color\n      }\n    case SET_BOXBORDER_COLOR:\n      return {\n        ...state,\n        boxBorderColor: action.color\n      }\n    default:\n      return state\n  }\n}\n\nexport default quassinoballyApp;\n","module.exports = __webpack_public_path__ + \"static/media/back.9c17417b.svg\";"],"sourceRoot":""}